{"version":3,"sources":["Deck/Settings/style.module.css","Context.js","icons/trash.svg","icons/pause.svg","icons/edit.svg","icons/reset.svg","icons/save.svg","icons/play.svg","Deck/deck/ThreeDotsBtn.js","LittleComponents/useOutsideAlerter.js","icons/redCross.svg","Deck/deck/AddQuestionsToDeck/AlertComponent.js","Deck/deck/AddQuestionsToDeck/AddQuestionsToDeck.js","Deck/deck/InputCheckbox.js","Deck/deck/BasicOrangeWindow.js","icons/questionMark.svg","icons/flashcards.svg","Deck/deck/DeleteCardQuestionBox.js","Deck/deck/CardBodyParts/SaveAndDiscard.js","Deck/deck/CardBodyParts/RepeatBtn.js","Deck/deck/CardBodyParts/PauseModeHandler.js","Deck/deck/CardBodyParts/QuestAnswerTrainOverv.js","Deck/deck/DeckOrCardname.js","icons/plus.svg","Deck/deck/Paused.js","Deck/deck/index.js","Deck/deck/CreateNewDeck.js","Deck/Menu/Hamburger.js","Deck/Menu/Icon.js","icons/settings.svg","icons/stats.svg","icons/logout.svg","Deck/Menu/MenuContainer.js","LandingPage/NavBar.js","LandingPage/PieDiagrammMain.js","LandingPage/ShowProgressDiagram.js","LandingPage/LandingPage.js","icons/hexagon.svg","icons/hexagonGreen.svg","Deck/Settings/Hexagons.js","Deck/Settings/RepetitionIntervalFields.js","Deck/Settings/ColorScheme.js","Deck/Settings/Settings.js","Deck/Stats/PieDiagramm.js","Deck/Stats/TimeAndProgress.js","Deck/Stats/HourlyBreakdown.js","Deck/Stats/RenderDays.js","Deck/Stats/Stats.js","Login/particle-config.js","Login/ParticlesBackground.js","icons/flashcard.svg","icons/flash.svg","icons/users.svg","icons/keys.svg","Login/Login.js","App.js","index.js"],"names":["module","exports","Context","React","createContext","ContextProvider","children","useState","showProgressDiagram","setShowProgressDiagram","scrollbarVisible","setScrollbarVisible","trigger","setTrigger","scroller","useRef","arrowDown","setArrowDown","changeDeckNameOpen","setChangeDeckNameOpen","editButtonClicked","setEditButtonClicked","pauseIsActive","setPauseIsActive","active","setActive","decksAreVisible","setDecksAreVisible","spinnerIsVisible","setSpinnerIsVisible","addNewDeckWindow","setAddNewDeckWindow","scrollPosition","setScrollPosition","showAnswerBtn","setShowAnswerBtn","dataBase","setDataBase","backgroundColor","light","dark","default","styles","setStyles","colors","useEffect","dB","DeckNames","queue","checkboxClicked","showDeleteFrame","openedToday","deckCompleted","timeValues","left","middle","right","breakdownIntervals","month","userTimePreferences","name","amount","unit","userPreferences","days","weeksInRow","toReview","hourlyBreakdown","studyTime","calendarReset","weeklyTarget","daysOfStudy","day","studied","Date","i","arr","push","question","answer","paused","data","thisDeckCompleted","color","length","toStudyValue","cardsToday","skipPausedCards","pauseMode","editModeActive","Provider","value","withRouter","text","showFromParent","style","className","nameOfTopDeck","index","input","threeDotsContainer","edit","trash","pause","reset","editBtnClicked","editEvent","trashEvent","resetEvent","type","useContext","blinkingSaveIcon","setBlinkingSaveIcon","threeDotsOpen","setThreeDotsOpen","handleClick","ref","cb","cb2","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useOutsideAlerter","setTimeout","onClick","newDataBase","console","log","handleDeckname","alt","marginRight","src","editimg","saveimg","handlePause","borderTop","borderBottom","borderLeft","borderRight","borderRadius","playimg","pauseimg","trashimg","resetimg","AlertComponent","card","setCard","newCardAdded","changeHandler","e","newCard","FormControl","as","aria-label","onChange","height","Alert","variant","trim","width","marginTop","AddQuestionsToDeck","show","setShow","setNewCardAdded","cursor","Modal","contentClassName","backdrop","onHide","Header","Title","fontSize","redCross","Body","InputCheckbox","generateRandom","id","tabIndex","getElementById","checked","htmlFor","filter","x","BasicOrangeWindow","title","menu","mainBox","setEdit","setShowRepeatBtn","setEditBtnClicked","marginLeft","onMouseEnter","querySelector","classList","add","onMouseLeave","remove","DeleteCardQuestionBox","pauseOrDelete","deleteWindow","showDeleteWindow","deleteCurrentCard","resetQuestionText","showMessageAgain","pauseCardinQuestionAnswer","randomQuestion","setPauseOrDeleteText","keyboard","dialogClassName","questionMark","closeButton","flashcards","toLowerCase","Footer","map","el","SaveAndDiscard","saveEvent","setCardModified","discardEvent","RepeatBtn","label","btn","Button","PauseModeHandler","position","top","item","QuestAnswerTrainOverv","createDeckButtonIsVisible","setCreateDeckButtonIsVisible","setChecked","setRandomQuestion","cardModified","pauseOrDeleteText","showRepeatBtn","setShowDeleteWindow","timer","setTimer","setTrash","deckLengthNotZero","setDeckLengthNotZero","threeDotsMenuOpen","setThreeDotsMenuOpen","inputRef","newRandomQuestion","alert","timeLeft","shift","Math","floor","random","openHistory","focus","setInterval","clearInterval","size","opacity","setShowFromParent","pauseEvent","disabled","col","saveHandler","splice","DeckOrCardName","bg","background","Paused","plusimg","max","min","padEnd","Deck","deck","setNameOfTopDeck","deckNameLengthRight","setDeckNameLengthRight","nameTooLongOrShort","setNameTooLongOrShort","deleteDeck","deleted","Card","border","CreateNewDeck","close","inputField","setInputField","nameTooShortOrLong","setNameTooShortOrLong","Ok","Cancel","centered","a","includes","Object","keys","addNewDeckName","Hamburger","href","history","display","Nav","Link","MenuContainer","Icons","icons","statsIcon","padding","paddingLeft","settingsIcon","logoutIcon","icon","key","NavBar","ChartComp","ctx","config","legend","labels","generateLabels","datasets","borderColor","borderWidth","options","elements","tooltips","hover","mode","cutoutPercentage","maintainAspectRatio","layout","Chart","pluginService","register","beforeDraw","chart","center","centerConfig","fontStyle","txt","maxFontSize","sidePaddingCalculated","sidePadding","innerRadius","font","stringWidth","measureText","elementWidth","widthRatio","newFontSize","elementHeight","fontSizeToUse","minFontSize","lineHeight","wrapText","undefined","textAlign","textBaseline","centerX","chartArea","centerY","bottom","fillStyle","fillText","words","split","line","lines","n","testLine","j","overflow","ShowProgressD","fontWeight","parseInt","DeckContainer","colorsArr","Container","Row","reduce","accum","transform","zIndex","setDeck","k","ar","reverse","onScroll","step","scrollTop","handleActive","Symbol","scrollHandler","Spinner","animation","Hexagons","idx","editHex","setEditHex","showDay","setShowDay","draggable","hexagonGreen","hexagonWhite","RepetitionIntervalFields","editIsPossible","setUserTimePreferences","saveOrEdit","inputNumb","setInputNumb","inputText","setInputText","outline","newUserTimePreferences","onInput","newValue","replace","maxLength","minLength","ColorScheme","handleColor","comp","setEditIsPossible","setSaveOrEdit","saveOrEditGoal","setSaveOrEditGoal","save","saveTimeNumberChanges","Array","fill","hoverBackgroundColor","fontColor","date","toDateString","deckItem","find","some","TimeAndProgress","currentProgress","setCurrentProgress","widthAdjusted","setWidthAdjusted","timeObj","setTimeObj","firstVal","getHours","secVal","thirdVal","fourthVal","6","12","18","24","round","toFixed","previousWidthVar","widthVar","time","renderLines","HourlyBreakdown","handleMonths","Fragment","margin","RenderDays","getFullYear","year","setDays","showTodaysProg","setShowTodaysProg","innerStat","setRight","outer","setOuter","thisYear","getMonth","getDate","cardsStudied","setDate","today","todaysAmount","findIndex","currentTarget","getBoundingClientRect","inner","setShowDeleteFrame","toLocaleDateString","marginBottom","forEach","ButtonLeftAndRight","setYear","handleIncrement","handleDecrement","particlesConfig","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","image","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","retina_detect","ParticleBackground","params","ParticlesConfig","Login","state","login","password","onSuccess","res","props","setUser","profileObj","onFailure","response","flashcard","flash","usersSolid","this","setState","keysSolid","appId","cssClass","fields","callback","clientId","buttonText","cookiePolicy","isSignedIn","Component","App","user","to","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.2e015db0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__3tOMJ\"};","import React, { useEffect, useState, useRef } from 'react'\n\nexport const Context = React.createContext(null)\n\nexport default function ContextProvider({ children }) {\n  const [showProgressDiagram, setShowProgressDiagram] = useState(true);\n  const [scrollbarVisible, setScrollbarVisible] = useState(true)\n\n  const [trigger, setTrigger] = useState(null);\n  const scroller = useRef();\n  const [arrowDown, setArrowDown] = useState(true);\n\n  const [changeDeckNameOpen, setChangeDeckNameOpen] = useState(false); //input field to change deckname is open\n  const [editButtonClicked, setEditButtonClicked] = useState(true); //active when editButton next to DeckName is clicked\n  const [pauseIsActive, setPauseIsActive] = useState(true);\n  const [active, setActive] = useState(0);\n  const [decksAreVisible, setDecksAreVisible] = useState(true); //decks are shown on the deck stack if this is set to true\n  const [spinnerIsVisible, setSpinnerIsVisible] = useState(true); //spinner that is shown when application loads\n  const [addNewDeckWindow, setAddNewDeckWindow] = useState(false);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [showAnswerBtn, setShowAnswerBtn] = useState(true); //button in questionAnswerTrainOverView with that name\n\n\n\n\n\n  const [dataBase, setDataBase] = useState(null);\n  const [styles, setStyles] = useState({\n    backgroundColor: {\n      light: ' #86a873',\n      dark: '#5aaaff',\n      default: 'rgb(90, 170, 149)'\n    }\n  });\n\n  // \n  let colors = ['#ffcdb2', '#ffb4a2', '#e5989b', '#b5838d', '#6d6875'];\n\n  useEffect(() => {\n    let dB = {\n\n      DeckNames: [],\n      active:2,\n      queue: [],\n      checkboxClicked: false,\n      showDeleteFrame: true,\n      openedToday: false,\n      deckCompleted: 2,\n      timeValues: {\n        left: 2,\n        middle: 5,\n        right: 10\n      },\n      breakdownIntervals: [\n        {month: 1},\n        {month: 3},\n        {month: 12}\n      ],\n      userTimePreferences: [\n        {\n          name: 'again',\n          amount: 3,\n          unit: 'm'\n        },\n        {\n          name: 'good',\n          amount: 5,\n          unit: 'h'\n        },\n        {\n          name: 'easy',\n          amount: 10,\n          unit: 'd'\n        }\n      ],\n      userPreferences: {\n        days: 0,\n        backgroundColor: 'default',\n        weeksInRow: 0,\n        toReview: 0\n      },\n      hourlyBreakdown: '1 month',\n      studyTime: 0,\n      calendarReset: false,\n      weeklyTarget: 1,\n      daysOfStudy: {\n        day: 4\n      },\n      studied: [new Date()],\n\n\n    };\n\n    for (let i = 100; i < 103; i++) {\n      let arr = [];\n\n      for (let i = 1; i < 5; i++) {\n        \n        if(i===3 || i ===2) {\n          arr.push({\n            question: `question${i}`,\n            answer: `answer${i}`,\n            paused: false\n          })\n        }else{\n          arr.push({\n            question: `question${i}`,\n            answer: `answer${i}`,\n            paused: true\n          })\n        }\n      };\n\n    \n\n      dB.DeckNames.push(\n        {\n          name:`Litera${i}`,\n          backgroundColor: colors[-100+i],\n          data: arr,\n          thisDeckCompleted: false, //shows whether the study goal of the particular deck is reached\n          color: colors[i%colors.length],\n          toStudyValue:0,\n          cardsToday: 0,\n          paused:false,\n          skipPausedCards: 0,\n          pauseMode:false,   //when active the pause switch can be clicked in question answers when cards are paused\n          editModeActive:false //when editModeActive is true, pause switch can t be clicked\n\n        }\n\n      );\n      dB.active++\n    }\n    setDataBase(dB)\n  }, []);\n  \n  return (\n\n    <Context.Provider \n    \n    value={{ dataBase, setDataBase, \n    styles, setStyles,\n    showProgressDiagram, setShowProgressDiagram, \n    colors\n    ,scrollbarVisible, setScrollbarVisible, \n    arrowDown, setArrowDown,\n    active, setActive,\n    trigger, setTrigger, \n    changeDeckNameOpen, setChangeDeckNameOpen,\n  editButtonClicked, setEditButtonClicked, \n  pauseIsActive, setPauseIsActive,\n  decksAreVisible, setDecksAreVisible,\n  spinnerIsVisible, setSpinnerIsVisible,\n  addNewDeckWindow, setAddNewDeckWindow,\n  scrollPosition, setScrollPosition, \n  showAnswerBtn, setShowAnswerBtn,\n  scroller\n\n     }} >\n\n      {children}\n\n    </Context.Provider>\n\n  )\n\n  \n}\n\n","export default __webpack_public_path__ + \"static/media/trash.15179e79.svg\";","export default __webpack_public_path__ + \"static/media/pause.5ad23e72.svg\";","export default __webpack_public_path__ + \"static/media/edit.2323341d.svg\";","export default __webpack_public_path__ + \"static/media/reset.d0d87211.svg\";","export default __webpack_public_path__ + \"static/media/save.94104019.svg\";","export default __webpack_public_path__ + \"static/media/play.f4a9d308.svg\";","import React, { useState, useRef, useContext,useEffect } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Context} from '../../Context';\n\nimport useOutsideAlerter from '../../LittleComponents/useOutsideAlerter'\n\nimport trashimg from '../../icons/trash.svg'\nimport pauseimg from '../../icons/pause.svg'\nimport editimg from '../../icons/edit.svg'\nimport resetimg from '../../icons/reset.svg'\nimport saveimg from '../../icons/save.svg'\nimport playimg from '../../icons/play.svg'\n\n\nfunction ThreeDotsBtn({    \n                        text, \n                        showFromParent, \n                        style, \n                        className, \n                        nameOfTopDeck, \n                        index, input, threeDotsContainer,\n                        edit=false,trash=false,pause=false,reset=false,\n                        editBtnClicked, //is the editBtn in the main Question/Answer Overview\n                        data,\n                        editEvent = () => { }, \n                        trashEvent = () => { },\n                        resetEvent = () => { },\n                       // pauseEvent = () => {},\n                        type\n                      }) \n\n{\n  const {\n    dataBase, setDataBase,\n  editButtonClicked,\n  } = useContext(Context);\n\n  const [blinkingSaveIcon, setBlinkingSaveIcon] = useState(false)\n   const [pauseIsActive, setPauseIsActive] = useState(true)\n  const [threeDotsOpen, setThreeDotsOpen] = useState(showFromParent);\n  //const {dataBase, setDataBase} = useContext(Context);\n\n\n  const handleClick = () => {\n    setThreeDotsOpen(!threeDotsOpen);\n    // setShowFromParent(!show)\n\n  };\n\n  const ref = useRef(null)\n\n  useEffect(()=>{\n    setThreeDotsOpen(showFromParent)\n  },[showFromParent])\n\n\n  function handleDeckname() {\n    let newDataBase = {...dataBase}\n    newDataBase.DeckNames[index].name = nameOfTopDeck\n    //delete newDataBase.DeckNames[name]\n    console.log(newDataBase)\n    setDataBase(newDataBase)\n  }\n\n\n  useOutsideAlerter([ref,input], \n                    editButtonClicked, \n                    ()=>{\n                      setThreeDotsOpen(false)\n                    },\n                    ()=>{\n                    setBlinkingSaveIcon(true)\n                    setTimeout(()=>{\n                      setBlinkingSaveIcon(false)},\n                      2000)\n                    }                  \n  )\n    \n    \n  function handleEdit() {\n    editEvent() \n    if(type==='card'){\n      handleClick()\n    }\n    // !editName && setShow(false) \n    // other way of writing it\n    if (!editButtonClicked) { //open input field when deckname is triggered\n      // setThreeDotsOpen(false)\n      handleDeckname()\n    }\n  }\n  \n\n  function handlePause () {\n  \n    //pauseEvent(index)\n    let newDataBase = {...dataBase}\n    let savePausedState = !pauseIsActive\n    setPauseIsActive(savePausedState)\n\n    dataBase.DeckNames[index].paused = !dataBase.DeckNames[index].paused\n\n    //let key = newDataBase.DeckNames.findIndex(deck=>deck.name === name)\n   // newDataBase.DeckNames[key].paused = true //does not work for some reason\n    setDataBase(newDataBase)\n   // setEditButtonClicked(true)\n    setThreeDotsOpen(false)\n    //setNameOfTopDeck(name)\n    \n  }\n\n\n  return (\n    <>\n    {\n      dataBase?.DeckNames?.[index]?.paused || editBtnClicked ?\n    \n      null\n         :\n      <div style={threeDotsContainer}\n      >\n        <div \n            className='rotateLittleModal' \n            onClick={\n                editButtonClicked? \n\n                handleClick                \n                  : \n                ()=>{} \n            } \n          >\n                  ...\n       \n        </div>\n\n        {\n          threeDotsOpen && \n          \n          <div \n            ref={ref}\n            style={style}\n            className={`ml-2 rounded mt-2 ${className}`}\n          >\n\n            {\n              edit&& \n              data?.length !==0 &&\n\n              <button \n                  className='threeDotsBtn__btn align-center  p-1 '\n                  onClick={handleEdit} \n              >\n                      \n                  <img \n                      alt='edit' \n                      style={{ marginRight: '3px' }}              \n                      className={ blinkingSaveIcon ? 'blinkingIcon':'' } \n                      src={ editButtonClicked? editimg: saveimg } \n                  /> \n\n                {text}\n\n              </button>\n            }\n\n            {\n              pause && \n              data?.length !==0 &&\n\n\n              <button \n                  className='threeDotsBtn__btn align-center  p-1 '\n                  onClick={()=>handlePause(index)}\n                  style={{\n                          borderTop: '1px solid black', borderBottom: '1px solid black' ,\n                          borderLeft: dataBase.DeckNames[index]?.paused? '1px solid black': null,\n                          borderRight: dataBase.DeckNames[index]?.paused? '1px solid black': null,\n                          borderRadius: dataBase.DeckNames[index]?.paused? '5px': null\n                        }}\n              >\n\n                  <img \n                      alt='pause' \n                      style={{ marginRight: '3px' }} \n                      src={ !dataBase.DeckNames[index]?.paused? pauseimg: playimg }  \n                  />\n\n                  {text}\n\n              </button>\n            }\n\n            {\n              trash && \n              \n              <button \n                className='threeDotsBtn__btn align-center  p-1'\n                onClick={() => {\n                    trashEvent()\n                    setThreeDotsOpen(false)\n                }}\n              >\n                <img \n                      style={{ marginRight: '3px' }} \n                      src={ trashimg } \n                      alt='trash' \n                />\n\n                {text}\n\n              </button>\n            }\n            {\n              reset &&\n              \n              <button \n                  className='threeDotsBtn__btn align-center outline-none p-1'\n                  onClick={resetEvent}\n              >\n\n                <img \n                    src={resetimg} \n                    alt='reset'\n                    className='threeDots__reset-img' \n                />\n\n                {text}\n              </button>\n            }\n          </div>\n        }\n      </div>   \n \n    }\n    </>\n  );\n}\n\nexport default  withRouter(ThreeDotsBtn)","import { useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nexport default function useOutsideAlerter(ref,editButtonClicked, cb,cb2) {\n\n    \n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n\n            if ( (ref[0].current && !ref[0].current.contains(event.target)) ) {\n                if(editButtonClicked){\n                    cb()\n                    // ()=>{setShow(false)}\n                } else {\n\n                    if(ref[1].current && !ref[1].current.contains(event.target)) {\n                        cb2()\n                    \n                    } else {\n                        \n                    }                   \n                    // ()=>{setStartAnimation(true)}\n                }\n            }\n        }\n\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref,editButtonClicked, cb, cb2]);\n}","export default __webpack_public_path__ + \"static/media/redCross.ada31ffe.svg\";","\nimport React from 'react';\nimport {FormControl, Alert } from 'react-bootstrap'\n\n\nfunction AlertComponent({card, setCard, newCardAdded}) {\n\n\n  function changeHandler(e) {\n \n    let newCard = { ...card }\n    let { name, value } = e.target;\n    newCard[name] = value\n    setCard(newCard)\n   \n  }\n\n\n  return (\n    <>\n    <div className='mb-2'\n    >\n      <p\n        className='questionAnswerStyling'\n      >\n        Question\n              </p>\n\n      <FormControl\n        as=\"textarea\"\n        aria-label=\"With textarea\"\n        value={card.question}\n        name='question'\n        onChange={changeHandler}\n        className='formControlIn'\n      />\n\n      {\n        newCardAdded ?\n\n          <div\n            className='justify-center-align-center'\n            style={{ height: '52px' }}\n          >\n\n            <Alert\n              //when question or answer is empty, show a warning message\n              variant={card.question.trim().length !== 0 && card.answer.trim().length !== 0 ? \"success\" : \"danger\"}\n              style={{\n                width: card.question.trim().length !== 0 && card.answer.trim().length !== 0 ? '140px' : '100px',\n                height: '35px'\n              }}\n            >\n              {\n                card.question.trim().length !== 0 && card.answer.trim().length !== 0 ?\n\n                  <div style={{ width: '140px' }}>\n                    Card added to Deck.\n                            </div>\n                  :\n                  <div style={{ width: '120px', height: '35px' }}>\n                    Input needed.\n                            </div>\n\n              }\n            </Alert>\n\n          </div>\n\n          :\n          null\n      }\n\n    </div>\n\n          <div style={{ marginTop: newCardAdded ? '0px' : '60px' }}\n          >\n\n            <p className='questionAnswerStyling'\n            >\n              Answer\n                    </p>\n\n            <FormControl\n              as=\"textarea\"\n              aria-label=\"With textarea\"\n              value={card.answer}\n              name='answer'\n              onChange={changeHandler}\n              className='formControlIn'\n            />\n\n          </div>\n          </>\n\n  )\n}\n\nexport default AlertComponent\n","\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Modal} from 'react-bootstrap'\nimport { Context } from '../../../Context';\nimport '../../../styles.css'\nimport redCross from '../../../icons/redCross.svg'\nimport AlertComponent from './AlertComponent'\n\nexport default function AddQuestionsToDeck({ index, name, \n  show, setShow}) {\n\n  const [card, setCard] = useState({ question: '', answer: '' })\n  const [newCardAdded, setNewCardAdded] = useState(false);\n\n  const { dataBase, setDataBase, \n    editButtonClicked, \n  setShowProgressDiagram,\n  setScrollbarVisible\n \n  } = useContext(Context);\n\n\n\n\n  function addToDeck() {\n\n    let newDataBase = { ...dataBase }\n    newDataBase.DeckNames[index].data.push(card)\n    setDataBase(newDataBase)\n    setNewCardAdded(true)\n    if (card.question.trim().length !== 0 && card.answer.trim().length !== 0) {\n      setTimeout(() => {\n        setCard({ question: '', answer: '' })\n        setNewCardAdded(false)\n      }, 650)\n    }\n  }\n\n\n  useEffect(() => {\n   \n    if (show) {\n     setShowProgressDiagram(false)\n\n    } else {\n      setShowProgressDiagram(true)\n      if (dataBase.DeckNames.length === 1 || dataBase.DeckNames.length === 0) {\n        setScrollbarVisible(false)\n      } else {\n        setScrollbarVisible(true)\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show]);\n\n\n  useEffect(() => {\n\n    setTimeout(() => { setNewCardAdded(false) }, 650)\n  }, [newCardAdded]);\n\n\n  return (\n\n\n\n    <div>\n      <button\n        className={'addNewCardsButton justify-center-align-center outline-none'}\n        style={{\n          cursor: dataBase.DeckNames[index]?.paused || !editButtonClicked ? 'default' : 'pointer'\n        }}\n\n        onClick={\n          dataBase.DeckNames[index]?.paused || !editButtonClicked ?\n\n            null\n            :\n            () => {\n              setShow(true)\n              setShowProgressDiagram(false)\n              setScrollbarVisible(false)\n            }\n        }\n      >\n        +\n      </button>\n\n      <Modal\n        show={show}\n        contentClassName={'mod'}\n        backdrop='static'\n        onHide={() => {\n        setShow(false)\n        setShowProgressDiagram(true)\n        }\n        }\n\n      >\n        <Modal.Header className='border-bottom-0'\n        >\n          <Modal.Title style={{ fontSize: '16px' }}\n          >\n\n            Deck: {name}\n\n          </Modal.Title>\n\n          <button\n            className='redCross justify-center-align-center'\n            onClick={() => setShow(false)}\n          >\n\n            <img\n              src={redCross}\n              alt='redCross'\n              className='nonDraggableIcon'\n            />\n          </button>\n\n        </Modal.Header>\n        <Modal.Body >\n\n        <AlertComponent \n                  card={card}\n                  setCard={setCard}\n                  newCardAdded={newCardAdded} \n        />\n\n          <button\n            onClick={addToDeck}\n            className='generalButtonStyling addToDeckButton'\n          >\n\n            Add to Deck\n                </button>\n\n        </Modal.Body>\n\n      </Modal>\n\n    </div>\n\n  )\n}\n","import React, { useContext } from 'react';\nimport { Context } from '../../Context'\n\nexport default function InputCheckbox({ index, setShowAnswerBtn, generateRandom }) {\n\n  const { dataBase, setDataBase } = useContext(Context)\n  let newDataBase = {...dataBase}\n\n\n  function cardsPaused() {\n\n    return dataBase.DeckNames[index].data.filter(x => x.paused === true).length || 0\n  }\n\n  function handleChecked (e) {\n    if(dataBase.DeckNames[index].editModeActive) {\n    document.getElementById('myonoffswitch').checked = false\n    }\n  }\n\n  function switchOnOrOff () {\n    if(!dataBase.DeckNames[index].editModeActive) {\n\n      if (dataBase.DeckNames[index].data.filter(x => x.paused === true).length === 0) {\n        // console.log('no cards paused')\n      } else {\n      \n          if(dataBase.DeckNames[index].pauseMode) {\n          dataBase.DeckNames[index].pauseMode=false\n          setDataBase(newDataBase)\n          setShowAnswerBtn(true)\n    \n        }  else {\n          dataBase.DeckNames[index].pauseMode=true\n          setDataBase(newDataBase)\n          setShowAnswerBtn(false)\n          generateRandom()\n      }  \n    } }\n  }\n\n\n  return (\n\n\n    <div\n    >\n      <input type=\"checkbox\" name=\"onoffswitch\"\n        className=\"onoffswitch-checkbox myonoffswitch\"\n        id=\"myonoffswitch\"\n        tabIndex=\"0\"\n        onChange={handleChecked}\n        value='10'\n      />\n\n\n      <label className=\"onoffswitch-label\" htmlFor=\"myonoffswitch\"\n       onClick={() => {\n         switchOnOrOff()\n       }\n       }\n      \n      >\n        <span className=\"onoffswitch-inner\"></span>\n        <span className=\"onoffswitch-switch justify-center-align-center\">\n          {`${cardsPaused()}`}\n        </span>\n      </label>\n\n    </div>\n\n  )\n}","import { Modal } from \"react-bootstrap\";\nimport redCross from \"../../icons/redCross.svg\";\nimport React, { useContext } from \"react\";\nimport InputCheckbox from \"./InputCheckbox\";\nimport { Context } from \"../../Context\";\n\nexport default function BasicOrangeWindow({\n  children,\n  show,\n  setShow,\n  title,\n  menu,\n  mainBox,\n  setShowAnswerBtn = () => {},\n  setEdit = () => {},\n  setShowRepeatBtn = () => {},\n  setEditBtnClicked = () => {},\n  generateRandom,\n  index,\n}) {\n  const {dataBase, setDataBase} = useContext(Context);\n\n  return (\n    <Modal\n      key={index}\n      show={show}\n      onHide={() => setShow(false)}\n      contentClassName={\"mod\"}\n      backdrop=\"static\"\n      style={{\n        left: \"-160px !important\",\n        right: \"45px !important\",\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n      }}\n    >\n      <div\n        className='innerModalContainer'\n      >\n        <Modal.Header className=\"border-bottom-0\">\n          <Modal.Title\n            style={{\n              fontSize: \"16px\",\n              marginLeft: \"12px\",\n              height: \"24px\",\n              width: \"240px\",\n            }}\n          >\n            {title}\n          </Modal.Title>\n\n          <div\n            className=\"onoffswitch\"\n            onMouseEnter={() => {\n              if (\n                dataBase.DeckNames[index].data.filter((x) => x.paused === true)\n                  .length > 0 && !dataBase.DeckNames[index].editModeActive\n              ) {\n                document\n                  .querySelector(\".onoffswitch-label\")\n                  .classList.add(\"pointer\");\n              }\n            }}\n            onMouseLeave={() => {\n              if (\n                dataBase.DeckNames[index].data.filter((x) => x.paused === true)\n                  .length > 0\n              ) {\n                document\n                  .querySelector(\".onoffswitch-label\")\n                  .classList.remove(\"pointer\");\n              }\n            }}\n          >\n            {mainBox ? (\n              <InputCheckbox\n                index={index}\n                generateRandom={generateRandom}\n                setShowAnswerBtn={setShowAnswerBtn}\n                \n              />\n            ) \n            \n            : null}\n          </div>\n\n          {menu}\n          <button\n            className=\"redCross justify-center-align-center\"\n            onClick={() => {\n              setShow(false);\n              setEdit(false);\n              setShowRepeatBtn(false);\n              setShowAnswerBtn(true);\n              setEditBtnClicked(false);\n              if (index) {\n              let newDataBase = {...dataBase}\n\n\n              newDataBase.DeckNames[index].pauseMode = false //needed to be set to false so that switch diagram closes in case its opened\n              setDataBase(newDataBase)\n              }\n            }}\n          >\n            <img className=\"nonDraggableIcon\" src={redCross} alt=\"redCross\" />\n          </button>\n        </Modal.Header>\n\n        <Modal.Body>{children}</Modal.Body>\n      </div>\n    </Modal>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/questionMark.0cfd23c4.svg\";","export default __webpack_public_path__ + \"static/media/flashcards.25ecd371.svg\";","import React, { useContext} from 'react'\nimport {Context} from '../../Context'\nimport { Modal } from 'react-bootstrap'\nimport '../../styles.css'\nimport resetimg from '../../icons/reset.svg'\nimport questionMark from '../../icons/questionMark.svg'\nimport flashcards from '../../icons/flashcards.svg'\n\nexport default function DeleteCardQuestionBox({ card, \n  pauseOrDelete,deleteWindow, \n  trashEvent, \n                                                setShowAnswerBtn=()=>{},\n                                                setShowRepeatBtn=()=>{},\n                                                setEditBtnClicked=()=>{},\n                                                showDeleteWindow,\n                                                deleteCurrentCard=()=>{},\n                                                resetQuestionText=false,\n                                                showMessageAgain= false,\n                                                 pauseCardinQuestionAnswer=false,\n                                                 randomQuestion,\n                                                 index,\n                                                 setPauseOrDeleteText=()=>{}\n                                              }) \n  \n{\n\n  const { dataBase, setDataBase} = useContext(Context)\n\n\n  function handleCheckbox () {\n  \n    setDataBase({...dataBase,checkboxClicked: true})\n  }\n \n\n  return (\n \n    \n      <Modal\n        show={showDeleteWindow}\n        onHide={deleteWindow}\n        backdrop=\"static\"\n        keyboard={false}\n        id='deleteWindow'\n        dialogClassName='backgroundModal'\n        contentClassName='widthFitContent'\n        className='d-flex justify-content-center '\n      >\n        <div>\n\n            <img \n                src={questionMark} \n               className='deleteCardQuestionBox__question-mark questionMark1'        \n                 alt='questionMark' \n            />\n            <img \n              src={questionMark} \n              className='deleteCardQuestionBox__question-mark questionMark2'\n               alt='questionMark'              \n            />\n\n        </div>\n        <Modal.Header \n            closeButton \n        >\n            <Modal.Title>\n                <div \n                  className='justify-center-align-center'           \n                  style={{height:'100%', width: '100%'}}\n                >\n                  <div>\n                      {\n                        resetQuestionText? \n                          <img \n                              src={resetimg} \n                              className='justify-center-align-center flashCardsStyling' \n                              alt='reset'                         \n                          />\n                          :\n                          <img \n                              src={flashcards} \n                              className='justify-center-align-center flashCardsStyling' \n                              alt='flashcards'                         \n                          />\n\n                      }\n                  </div>\n\n                  <div>  \n                      {\n                        resetQuestionText? \n                                          'Reset progress'\n                                            :\n                                          `${pauseOrDelete} ${card}`\n                      }\n                  </div>\n              </div>\n            </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body \n            className='justify-center-align-center' \n        >\n\n            {\n              resetQuestionText?  'Do you want to reset the stats?'\n                                       : \n                                  `Do you want to ${pauseOrDelete.toLowerCase()} this ${card} ?` \n            }\n        </Modal.Body>\n\n        <Modal.Footer>\n\n            <div \n                className='flexAroundCenter' \n                style={{width: '100%', height: '14px'}}\n            >\n\n                <div \n                    className='justify-around'\n                    style={{width: '75%' }}\n                >\n\n                    {\n                      ['No', 'Yes'].map(el =>\n                          <div \n                          key={el}\n                              className='deleteContainerNoAndYes justify-center-align-center'\n                              onClick={() => {\n                                if (el === 'Yes') {\n                                  trashEvent()\n                                  deleteCurrentCard()\n                                  setShowRepeatBtn(false)\n                                   setShowAnswerBtn(true)\n                                  setEditBtnClicked(false)\n                             \n\n                                 if(pauseCardinQuestionAnswer){\n\n                                  let newDataBase = { ...dataBase }\n\n                                  dataBase.DeckNames[index].data[randomQuestion].paused = true\n                                  setDataBase(newDataBase)\n                                \n                                 }\n                                }\n                                deleteWindow()\n                                setPauseOrDeleteText(true)\n                              }}\n                          >\n\n                            {el}\n                          </div>\n                          )\n                    }\n                </div>\n            </div>\n\n        </Modal.Footer>\n\n      {!showMessageAgain?\n\n      <div \n          className='deleteCardQuestionBox__showMessageAgain justify-center'\n      >\n\n          <div style={{width: '40px'}}\n          >\n\n              <input \n                  style= {{width: '45px'}} \n                  type='checkbox' \n                  onChange={handleCheckbox}\n              />\n    \n          </div>\n\n          <div className='deleteCardQuestionBox__dontShowMessageAgain'\n          >\n\n            Don't show message again\n          </div>\n      </div>\n      : \n      null\n      }\n\n      </Modal>\n  );\n}\n\n\n","\nimport React from 'react';\n\nexport default function SaveAndDiscard({ saveEvent, generateRandom, setCardModified,discardEvent }) {\n\n \n  return (\n\n    <div className='saveAndDiscardContainer flexAroundCenter flex-column'>\n\n      <div>Save changes?</div>\n      <div \n          className='justify-between'\n          style={{width: '140px'}}\n          >\n      {\n        ['Discard', 'Save'].map((el, index) =>\n          <div\n            className={`saveAndDiscardButtonStyling flexAroundCenter ${el}Btn`}\n          \n            onClick={\n                    el === 'Save'? \n                    ()=>{\n                        generateRandom();\n                        saveEvent();\n                        setCardModified(true)\n                      } \n                        : \n                      ()=>{discardEvent()}\n                  }\n              key={index}\n            \n          >\n\n            {el}\n          </div>\n        )\n      }\n            </div>\n    </div>\n  )\n}","import { Button} from 'react-bootstrap'\n\nexport default function RepeatBtn({ label, btn, onClick }) {\n  \n  return (\n\n    <div className='text-center'\n    >\n\n      <div className='font-weight-bold'\n      >\n          {label}\n      </div>\n\n      <Button \n          variant=\"secondary\"\n          onClick={onClick}\n          className='justify-center-align-center repeat-btn__button'\n      >\n\n          {btn}\n      </Button>\n    \n    </div>\n  )\n}\n","import React, {useContext} from \"react\";\nimport pauseimg from \"../../../icons/pause.svg\";\nimport { Context } from \"../../../Context\";\n\nexport default function PauseModeHandler({generateRandom, index, randomQuestion}) {\n\n  const { dataBase, setDataBase} = useContext(Context)\n  return (\n    <>\n        <div\n          style={{ position: \"absolute\", left: \"37px\", top: \"-15px\" }}\n        >\n          <img src={pauseimg} alt={\"pause\"} />\n          <span style={{ marginLeft: \"7px\" }}>mode</span>\n        </div>\n\n        <div className=\"justify-center\">\n          <div\n            className=\"flexAround\"\n            style={{ width: \"300px\" }}\n          >\n            <div\n              className=\"unpauseAndKeepPausedButton showAnswerButton justify-center\"\n              onClick={() => {\n                let newDataBase = { ...dataBase };\n                newDataBase.DeckNames[index].data.filter(\n                  (item) => item.paused\n                )[randomQuestion].paused = false;\n                setDataBase(newDataBase);\n                generateRandom();\n              }}\n            >\n              Unpause card\n            </div>\n            <div\n              className=\"unpauseAndKeepPausedButton showAnswerButton justify-center\"\n              onClick={() => {\n                generateRandom();\n              }}\n            >\n              Keep paused\n            </div>\n          </div>\n        </div>\n      </>\n  )\n}\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { Context } from \"../../../Context\";\nimport { Button, FormControl, Alert } from \"react-bootstrap\";\nimport editimg from \"../../../icons/edit.svg\";\n\nimport ThreeDotsBtn from \"../ThreeDotsBtn\";\nimport BasicOrangeWindow from \"../BasicOrangeWindow\";\nimport DeleteCardQuestionBox from \"../DeleteCardQuestionBox\";\nimport SaveAndDiscard from \"./SaveAndDiscard\";\nimport RepeatBtn from \"./RepeatBtn\";\nimport PauseModeHandler from './PauseModeHandler'\n\n\nexport default function QuestAnswerTrainOverv({\n  name,\n  data,\n  index,\n  paused,\n  createDeckButtonIsVisible,\n\n  setCreateDeckButtonIsVisible = () => {},\n  //editButtonClicked, //activated when change deckname field is open\n}) {\n\n  const [checked, setChecked] = useState(false);\n  const [editBtnClicked, setEditBtnClicked] = useState(false);\n  const [randomQuestion, setRandomQuestion] = useState(null);\n  const [cardModified, setCardModified] = useState(false);\n  const [pauseOrDeleteText, setPauseOrDeleteText] = useState(true);\n  const [show, setShow] = useState(false);\n  const [showRepeatBtn, setShowRepeatBtn] = useState(false);\n\n  const [showDeleteWindow, setShowDeleteWindow] = useState(true);\n  const [timer, setTimer] = useState(null);\n  const [trash, setTrash] = useState(false);\n  const [deckLengthNotZero, setDeckLengthNotZero] = useState(true);\n\n\n  const {\n    dataBase, setDataBase, \n  editButtonClicked, \n setShowProgressDiagram,\n showAnswerBtn, setShowAnswerBtn\n  } = useContext(Context);\n\n\n  const [card, setCard] = useState({ answer: \"\", question: \"\" });\n  const [threeDotsMenuOpen, setThreeDotsMenuOpen] = useState(false);\n  const [mainBox] = useState(true);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (editBtnClicked) {\n      inputRef.current.focus();\n    }\n  }, [editBtnClicked]);\n\n  function handlePause() {\n    // let newDataBase = {...dataBase}\n    // let savePausedState = !pauseIsActive\n    // setPauseIsActive(savePausedState)\n    // dataBase.DeckNames[index].paused = !dataBase.DeckNames[index].paused\n    // setDataBase(newDataBase)\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCardModified(false);\n    }, 500);\n  }, [cardModified]);\n\n\n  function generateRandom() {\n    let newRandomQuestion = null;\n    if (dataBase.DeckNames[index].pauseMode) {\n      //pause mode is activated when the switch is pressed and cards are paused\n      if (data.filter((item) => item.paused === true).length > 0) {\n        data = data.filter((item) => item.paused === true);\n      }\n    }\n\n    if (data.length === 0) {\n      alert(\"add questions to deck\");\n      setDeckLengthNotZero(false);\n    } else {\n      setDeckLengthNotZero(true);\n      if (dataBase.queue[0] && dataBase.queue[0].timeLeft === 0) {\n        //need to have algorithm to filter s in queue related onlz for this deck\n        //also not tot forget add decremental time algorith for all crads no matter waht deck\n        newRandomQuestion = dataBase.queue.shift().index;\n      } else {\n        newRandomQuestion = Math.floor(Math.random() * data.length);\n        // console.log(randomQuestion, \"randomQuestion\");\n        let newDataBase = { ...dataBase };\n\n        if (!newDataBase.DeckNames[index].data[newRandomQuestion]?.openHistory) {\n          //if card was not opend before  a new array is made\n          newDataBase.DeckNames[index].data[newRandomQuestion].openHistory = [];\n        }\n\n        newDataBase.DeckNames[index].data[newRandomQuestion].openHistory.push(\n       //   new Date()\n       new Date('May 26, 2021')\n        );\n        setDataBase(newDataBase);\n      }\n      if(newRandomQuestion === randomQuestion){\n        generateRandom()\n      }else{\n        setRandomQuestion(newRandomQuestion);\n        setCard(data[newRandomQuestion]);\n        setShow(true);\n      }\n      \n    }\n  }\n\n  function discardHandler() {\n    setCard(data[randomQuestion]);\n   \n  }\n\n  // function addToQueue(time) {\n  //   let newDataBase = { ...dataBase }\n\n  //   newDataBase.queue.push({\n  //     ...data[randomQuestion],\n  //     index: randomQuestion,\n  //     timeLeft: time * 1000,\n  //     item: name\n  //   })\n\n  //   setDataBase(newDataBase)\n  // }\n\n  useEffect(() => {\n    if (show) {\n      let timeLeft = setInterval(() => {\n        // dataBase.queue.forEach((item, index) => {\n        //   if (dataBase.queue[index].timeLeft >= 1000) {\n        //     dataBase.queue[index].timeLeft -= 1000\n        //   } else {\n        //     dataBase.queue[index].timeLeft = 0\n        //   }\n        //     // })\n      }, 1000);\n      // })\n      //everything  here will be returned when components unmounts\n      setTimer(timeLeft);\n      setShowProgressDiagram(false);\n    } else {\n      clearInterval(timer);\n      setShowProgressDiagram(true);\n      // console.log('oh you delete me')\n    }\n    //return function () {clearInterval(timeLeft)}\n    // eslint-disable-next-line\n  }, [show]);\n\n  function deleteCurrentCard() {\n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].data.splice(randomQuestion, 1);\n    setDataBase(newDataBase);\n    generateRandom();\n  }\n\n  function editModeActive() {\n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].editModeActive = false;\n    setDataBase(newDataBase);\n  }\n\n  function saveHandler() {\n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].data[randomQuestion] = card;\n    setDataBase(newDataBase);\n  }\n\n  function changeHandler(e) {\n    let { name, value } = e.target;\n    setCard({ ...card, [name]: value });\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"secondary\"\n        className=\"openDeck\"\n        size=\"sm\"\n        style={{\n          opacity: paused || data.length === 0 ? \"0\" : \"1\", //open deck button is not visible when length is zero\n          cursor:\n            paused || data.length === 0 || !editButtonClicked\n              ? \"default\"\n              : \"pointer\",\n          backgroundColor: !editButtonClicked ? \"rgb(108, 117, 125)\" : \"grey\",\n          position: \"relative\",\n          top: \"25px\",\n        }}\n        onClick={\n          paused || !editButtonClicked //when edit button is clicked or deck is paused, the question/answer view does not open, by default this button is true\n            ? null\n            : () => {\n                generateRandom();\n                let newDataBase = { ...dataBase };\n                newDataBase.openedToday = true;\n                setShowProgressDiagram(false); //progress diagram gets why not at this place??\n                setDataBase(newDataBase);\n              }\n        }\n      >\n        Open Deck\n      </Button>\n\n      {deckLengthNotZero && !paused && (\n        <BasicOrangeWindow\n          show={show}\n          setShow={setShow}\n          generateRandom={generateRandom}\n          mainBox={mainBox}\n          index={index}\n          id=\"questionAnswerOverview\"\n          showRepeatBtn={showRepeatBtn}\n          setShowRepeatBtn={setShowRepeatBtn}\n          setEditBtnClicked={setEditBtnClicked}\n          createDeckButtonIsVisible={createDeckButtonIsVisible}\n          setCreateDeckButtonIsVisible={setCreateDeckButtonIsVisible}\n          title={`Deck: ${name}`}\n          showFromParent={threeDotsMenuOpen}\n          menu={\n            dataBase.DeckNames[index].pauseMode ? null : (\n              <ThreeDotsBtn\n                text={\"card\"}\n                editButtonClicked={true}\n                editBtnClicked={editBtnClicked}\n                className=\"threeDotsInQuestionAnswerStyling\"\n                threeDotsContainer={{ position: \"default\" }}\n                paused={paused}\n                setShowFromParent={setThreeDotsMenuOpen}\n                index={index}\n                edit\n                pause\n                trash\n                type=\"card\"\n                editEvent={() => {\n                  setShowAnswerBtn(false);\n                  setEditBtnClicked(true);\n                  setShowRepeatBtn(false);\n                  let newDataBase = { ...dataBase };\n                  newDataBase.DeckNames[index].editModeActive = true;\n                  setDataBase(newDataBase);\n                }}\n                pauseEvent={() => {\n                  handlePause();\n                  setTrash(true);\n                  setShowDeleteWindow(true);\n                }}\n                trashEvent={() => {\n                  setTrash(true);\n                  setPauseOrDeleteText(false);\n                  setShowDeleteWindow(true);\n                  setShowAnswerBtn(true);\n                  //                    }\n                }}\n              />\n            )\n          }\n        >\n          {editBtnClicked ? (\n            <div className='editBtnClickedStyling align-center'\n            >\n              <img alt=\"edit\" src={editimg} />\n              <span style={{ marginLeft: \"3px\" }}>mode</span>\n            </div>\n          ) : null}\n\n          {data[randomQuestion] && (\n            <>\n              <div className=\"mb-4\">\n                <p className=\"questionAnswerStyling\">Question</p>\n\n                <FormControl\n                  as=\"textarea\"\n                  aria-label=\"With textarea\"\n                  value={card.question}\n                  disabled={!editBtnClicked}\n                  name=\"question\"\n                  onChange={changeHandler}\n                  className=\"formControlIn\"\n                  ref={inputRef}\n                />\n              </div>\n\n              {showAnswerBtn && (\n                <Button\n                  variant=\"secondary\"\n                  className=\"p-1 showAnswer my-5 justify-center-align-center\"\n                  onClick={() => {\n                    setShowAnswerBtn(false);\n                    setShowRepeatBtn(true);\n                  }}\n                >\n                  Show answer\n                </Button>\n              )}\n\n                {dataBase.DeckNames[index].pauseMode ? \n\n              <PauseModeHandler\n\n                generateRandom={generateRandom}\n                index = {index}\n                randomQuestion={randomQuestion}\n\n              />\n              : null} \n\n              {showRepeatBtn && (\n                <div className=\"justify-center\">\n                  <div\n                    className=\"justify-between px-3 showRepeatBtnInner\"\n                  >\n                    {dataBase.userTimePreferences.map((col, index) => (\n                      <RepeatBtn\n                        btn={col.name}\n                        key={index}\n                        label={\"< \" + col.amount + col.unit}\n                        onClick={() => {\n                          setShowAnswerBtn(!showAnswerBtn);\n                          setShowRepeatBtn(false);\n                          generateRandom();\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {cardModified ? (\n                <div\n                  className=\"justify-center-align-center\"\n                  style={{ height: \"52px\" }}\n                >\n                  <Alert\n                    variant=\"success\"\n                    style={{ width: \"145px\", height: \"35px\" }}\n                  >\n                    Card was modified.\n                  </Alert>\n                </div>\n              ) : null}\n              {!showAnswerBtn && (\n                <div className=\"mt-4\">\n                  <p className=\"questionAnswerStyling\">Answer</p>\n\n                  <FormControl\n                    as=\"textarea\"\n                    aria-label=\"With textarea\"\n                    value={card.answer}\n                    disabled={!editBtnClicked}\n                    name=\"answer\"\n                    onChange={changeHandler}\n                    className=\"formControlIn\"\n                  />\n                </div>\n              )}\n\n              {editBtnClicked && (\n                <div className=\"d-flex justify-content-center\">\n                  <SaveAndDiscard\n                    generateRandom={generateRandom}\n                    setCardModified={setCardModified}\n                    cardModified={cardModified}\n                    saveEvent={() => {\n                      setShowAnswerBtn(true);\n                      setEditBtnClicked(false);\n                      saveHandler();\n                      editModeActive();\n                    }}\n                    discardEvent={() => {\n                      setShowAnswerBtn(true);\n                      setEditBtnClicked(false);\n                      discardHandler();\n                      editModeActive();\n                    }}\n                  />\n                </div>\n              )}\n\n              {trash && showDeleteWindow && (\n                <DeleteCardQuestionBox\n                  card=\"card\"\n                  pauseOrDelete={`${pauseOrDeleteText ? \"Pause\" : \"Delete\"}`}\n                   checked={checked}\n                   setChecked={setChecked}\n                  randomQuestion={randomQuestion}\n                  show={show}\n                  index={index}\n                  editBtnClicked={editBtnClicked}\n                  setEditBtnClicked={setEditBtnClicked}\n                  setShowAnswerBtn={setShowAnswerBtn}\n                  setShowRepeatBtn={setShowRepeatBtn}\n                  trashEvent={deleteCurrentCard}\n                  showDeleteWindow={showDeleteWindow}\n                  deleteWindow={() => setShowDeleteWindow(false)}\n                  pauseCardinQuestionAnswer\n                  setPauseOrDeleteText={setPauseOrDeleteText}\n                />\n              )}\n            </>\n          )}\n        </BasicOrangeWindow>\n      )}\n    </>\n  );\n}\n","\n\n\nexport default function DeckOrCardName({ name, paused, index,bg}) {\n\n\n  let colors = ['#ffcdb2', '#ffb4a2', '#e5989b', '#b5838d', '#6d6875'];\n\n \n\n  return (\n\n    <div        \n     \n        className='deckOrCardNameContainer'\n        style={{\n            background: bg\n        }}\n    >\n     \n          <div\n              className='hoveredDeckOrCardName'\n              style={{\n                  background: colors[index % 5],\n                  cursor: name.length > 15 && !paused ? \n                      'pointer' \n                          : \n                      'default'\n                }}\n          >\n\n              {name}\n          </div>\n      \n     \n         \n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/plus.38aee7e7.svg\";","import React, { useContext}  from 'react';\nimport playimg from \"../../icons/play.svg\";\nimport plusimg from \"../../icons/plus.svg\";\nimport { Context } from \"../../Context\";\n\n\nfunction Paused({data, index, paused, name, setShow, style}) {\n\n  const { dataBase, setDataBase } = useContext(Context);\n  let colors = [\"#ffcdb2\", \"#ffb4a2\", \"#e5989b\", \"#b5838d\", \"#6d6875\"];\n\n\n  function handleToStudy(e) {  \n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].toStudyValue = e.target.value;\n    setDataBase(newDataBase);\n\n\n  }\n\n  function handlePause(index) { \n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].paused = true;\n    setDataBase(newDataBase);\n   \n  }\n\n\n  return (\n    <div\n    className=\"paused justify-between flex-column\"\n  >\n    {data.length === 0 ? (\n      <div\n        className=\"deckEmptyAndPausedContainer deckEmpty justify-evenly-align-center flex-column\"\n     \n      >\n        <div\n          className=\"justify-around flex-column\"\n          style={{ height: \"90px\", width: \"122px\" }}\n        >\n          <div>\n          Deck is empty.\n          </div>\n          <div>\n            Press:\n            <span\n              className='paused__container_img-plus'\n              onClick={() => setShow(true)}\n            >\n              <img src={plusimg} alt=\"plus\" />\n            </span>\n          </div>\n        </div>\n        <div\n          className = 'paused__addCardsToDeck'\n        >\n          to add cards to the deck.\n        </div>\n      </div>\n    ) : (\n      <>\n        <div\n          className=\"divStyling align-center\"\n          style={{ opacity: paused ? \"0\" : \"1\" }}\n        >\n          To Study:\n          <input\n            type=\"number\"\n            className=\"inputStyling\"\n            style={{ background: paused ? style.background : \"none\" }}\n            value={dataBase.DeckNames[index].toStudyValue || 0}\n            max={\n              dataBase.DeckNames[index].data.length -\n                dataBase.DeckNames[index].data.filter(\n                  (x) => x.paused === true\n                ).length || 0\n            }\n            min=\"1\"\n            onChange={handleToStudy}\n          />\n        </div>\n      </>\n    )}\n\n    {paused ? (\n      <div\n        className=\"deckEmptyAndPausedContainer justify-evenly-align-center flex-column\"\n        style={{ background: colors[index % 5] }}\n      >\n        <div>This deck is paused.</div>\n\n        <div className='align-center'>\n          Press:\n          <button\n            className=\"btn-play justify-center-align-center\"\n            onClick={() => {\n              handlePause();\n            }}\n          >\n            <img\n              src={playimg}\n              alt=\"play\"\n              className='paused__img-play'\n            />\n          </button>\n        </div>\n        <div className=\"paused__countToStudyGoal\">\n          It doesn't count to the study goal.\n        </div>\n      </div>\n    ) : null}\n\n    {name && data.length !== 0 ? (\n      <div\n        className=\"divStyling align-center\"\n        style={{ opacity: paused ? \"0\" : \"1\" }}\n      >\n        {\"Decksize:\".padEnd(10, \"⠀\")} {data.length}\n      </div>\n    ) : null}\n  </div>\n  )\n}\n\nexport default Paused\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { Context } from \"../../Context\";\nimport { Card } from \"react-bootstrap\";\nimport \"../../styles.css\";\nimport ThreeDotsBtn from \"./ThreeDotsBtn\";\nimport AddQuestionsToDeck from \"./AddQuestionsToDeck/AddQuestionsToDeck\";\nimport QuestAnswerTrainOverv from \"./CardBodyParts/QuestAnswerTrainOverv\";\nimport DeckOrCardName from \"./DeckOrCardname\";\nimport DeleteCardQuestionBox from \"./DeleteCardQuestionBox\";\nimport Paused from './Paused'\n\nexport default function Deck({\n   deck,\n   index,\n   bg,\n   paused,\n   ...style\n}) {\n  if (deck) {\n    var { data, name } = deck;\n  }\n\n  const [show, setShow] = useState(false);\n  const [nameOfTopDeck, setNameOfTopDeck] = useState(name);\n  const [threeDotsMenuOpen, setThreeDotsMenuOpen] = useState(false);\n  const [deckNameLengthRight, setDeckNameLengthRight] = useState(true)\n  const [nameTooLongOrShort, setNameTooLongOrShort] = useState(false)\n  const [showDeleteWindow, setShowDeleteWindow] = useState(true); //if true and triggered the delete window with yes and no button is shown\n  const [trash, setTrash] = useState(false);\n\n\n\n  const {\n    dataBase, setDataBase\n  , setChangeDeckNameOpen,\n  editButtonClicked, setEditButtonClicked, \n  setDecksAreVisible,\n  active, setActive,\n setArrowDown\n  } = useContext(Context);\n\n  //const [index, setIndex] = useState(0);\n\n/*  useEffect(() => {\n    let cIndex = dataBase.DeckNames.findIndex((item) => item.name === name);\n    setIndex(cIndex);\n    //console.log(cIndex)\n    // eslint-disable-next-line\n  }, [trigger]);*/\n\n  useEffect(() => {\n    setChangeDeckNameOpen(!editButtonClicked); //when input field of deck name is open it is set to false\n     // eslint-disable-next-line\n  }, [editButtonClicked]);\n\n\n  let input = useRef(null);\n\n  function handlePause(index) { \n    let newDataBase = { ...dataBase };\n    newDataBase.DeckNames[index].paused = true;\n    setDataBase(newDataBase);\n   \n  }\n\n\n  useEffect(() => {\n    setNameOfTopDeck(name);\n    console.log(name);\n  }, [name]);\n\n  function deleteDeck() {\n    let newDataBase = { ...dataBase };\n    //newDataBase.DeckNames[index].deleted = true; //index where delete starts second para is delete count\n\n    \n     newDataBase.DeckNames.splice(index,1)\n    \n    if (newDataBase.DeckNames.filter(item=>!item.deleted).length === 0) {\n      setDecksAreVisible(false);\n      setArrowDown(true);\n    } else {\n    \n      setDataBase(newDataBase);\n  \n      if (index === 0) {\n        setActive(1);\n      } else {\n        setActive(active-1);\n      }\n    }\n  }\n\n\n  function handleChangeName(e){\n\n    if (e.target.value.length >3 && e.target.value.length <12) {\n     \n     setDeckNameLengthRight(true)\n     setThreeDotsMenuOpen(true)\n     setNameTooLongOrShort(false)\n     \n    } else {\n      setNameTooLongOrShort(true)\n      setDeckNameLengthRight(false)\n\n    }\n      setNameOfTopDeck(e.target.value);\n  }\n\n\n  // function handleActive(i) {\n  //   setActive(i);\n  //   let newDataBase = { ...dataBase };\n  //   newDataBase.active = i;\n  //   setDataBase(newDataBase);\n  // }\n\n\n\n  return (\n    deck && (\n\n     \n      \n      <Card\n        style={style}\n        className=\"newDeckContainer flexColumn position-absolute \"\n      >\n     \n        <Card.Body className=\"justify-center-align-center flex-column\"\n        >\n          {\n        nameTooLongOrShort? \n          <div className='tooLongOrShort'\n          >\n          {`${nameOfTopDeck.length>11? 'Too long' : nameOfTopDeck.length<4? 'Too short': ''}`}\n          </div>\n          :\n          null\n\n       }  \n\n          <Card.Title\n            className=\"justify-between-align-center position-relative\"\n            style={{ width: \"151px\", left: \"3px\", height: \"0px\" }}\n          >\n            {editButtonClicked ? (\n              <DeckOrCardName\n                bg={bg}\n                index={index}\n                paused={paused}\n                data={data}\n                name={name}\n                className=\"deckOrCardNameStyling\"\n              />\n            ) : (\n              <input\n                ref={input}\n                className=\"addToDeckInput\"\n                value={nameOfTopDeck}\n                onChange={handleChangeName}\n              />\n        \n            )}\n            \n            {\n              deckNameLengthRight &&\n            <ThreeDotsBtn\n              name={name}\n              text={\"deck\"}\n              data={data}\n              showFromParent={threeDotsMenuOpen}\n              setShowFromParent={setThreeDotsMenuOpen}\n              index={index}\n              paused={paused}\n              bg={style.background}\n              nameOfTopDeck={nameOfTopDeck}\n              setNameOfTopDeck={setNameOfTopDeck}\n              edit={!paused}\n              pause\n              trash={!paused}\n              input={input}\n              threeDotsContainer={{\n                position: \"fixed\",\n                right: \"50px\",\n                top: \"18px\",\n              }}\n              className=\"threeDotsBtnIndex\"\n              style={{\n                border: paused ? \"none\" : \"1px solid black\",\n                backgroundColor: paused ? \"black\" : \"white\",\n              }}\n              editEvent={() => {\n              \n                setThreeDotsMenuOpen(false);\n                setEditButtonClicked(!editButtonClicked);\n               \n\n              }}\n              pauseEvent={(index)=>{\n                handlePause(index)\n              }}\n              trashEvent={\n                dataBase.checkboxClicked\n                  ? () => {\n                      deleteDeck();\n                      // handleActive(active - 1);\n                    }\n                  : () => {\n                      setTrash(true);\n                      setShowDeleteWindow(true);\n                    }\n              }\n            />\n                }\n\n            {trash && showDeleteWindow && !paused && (\n              <DeleteCardQuestionBox\n                pauseOrDelete=\"Delete\"\n                card=\"deck\"\n                threeDotsMenuOpen={threeDotsMenuOpen}\n                index={index}\n                deleteWindow={() => setShowDeleteWindow(false)}\n                trashEvent={() => {\n                  deleteDeck();\n                  //handleActive(index - 1);\n                }}\n                showDeleteWindow={showDeleteWindow}\n              />\n            )}\n          </Card.Title>\n\n                <Paused\n                  data={data}\n                  index={index}\n                  setShow={setShow}\n                  paused={paused}\n                  name={name}\n                  style={style}\n                />\n         \n\n          <QuestAnswerTrainOverv\n            name={name}\n            index={index}\n            data={data}\n            paused={paused}\n           \n          />\n\n          {active === index && (\n       \n            <AddQuestionsToDeck\n              background={style.background}\n              name={name}\n              index={index}\n              show={show}\n              setShow={setShow}\n            />\n          )}\n        </Card.Body>\n      </Card>\n    )\n  );\n}\n\n\n\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Context } from \"../../Context\"; \n\nexport default function CreateNewDeck({\n  close,\n \n}) {\n\n  const {\n    dataBase, setDataBase, setShowProgressDiagram, colors,\n   setScrollbarVisible,\n   setDecksAreVisible,\n  addNewDeckWindow, \n setArrowDown, setActive, \n  } = useContext(Context);\n\n  const [inputField, setInputField] = useState('');\n  const [nameTooShortOrLong, setNameTooShortOrLong] = useState(false);\n\n  const inputRef = useRef(null);\n  const Ok = useRef(null);\n  const Cancel = useRef(null);\n\n  useEffect(() => {\n    if (addNewDeckWindow) {\n      inputRef.current.focus();\n      setShowProgressDiagram(false);\n    } \n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNewDeckWindow]);\n\n\n\n  function addNewDeckName() {\n\n    let newDataBase = { ...dataBase };\n\n   \n      let index = newDataBase.DeckNames.push({\n        name: inputField,\n        data: [],\n        cardsToday: 0,\n        color: colors[Object.keys(dataBase.DeckNames).length % colors.length],\n        paused: false,\n        thisDeckCompleted: false, //shows whether the study goal of the particular deck is reached\n        skipPausedCards: 0,\n        pauseMode: false, //when active the pause switch can be clicked in question answers when cards are paused\n        editModeActive: false, //when editModeActive is true, pause switch can t be clicked\n  \n      });\n\n      if (dataBase.DeckNames.length === 1 || dataBase.DeckNames.length === 0) {\n        setScrollbarVisible(false)\n      } else {\n        setScrollbarVisible(true)\n      }\n      setActive(index - 1);\n      setInputField(\"\");\n      setDataBase(newDataBase);\n      close();\n    }\n  \n\n\n  return (\n    <Modal\n      show={addNewDeckWindow}\n      backdrop=\"static\"\n      keyboard={false}\n      id=\"createDeck\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>Name for new deck</Modal.Title>\n\n      </Modal.Header>\n\n      <Modal.Body className=\"align-center flex-column\">\n        <input\n          id=\"inputField\"\n          ref={inputRef}\n          value={inputField}\n          onChange={(event) => {\n            setInputField(event.target.value)\n\n      setTimeout(()=>{\n            if (event.target.value.length  > 3 && event.target.value.length < 11) {\n               \n              Ok.current.disabled = false;\n              Ok.current.classList.add('okCancelButtonColor');           \n              setNameTooShortOrLong(false)\n            }else{ \n              setNameTooShortOrLong(true)\n              Ok.current.disabled = true\n              Ok.current.classList.remove('okCancelButtonColor');\n            }\n\n          }, 800)\n\n          }}\n        />\n         \n        {\n          <div className='tooShortOrLong'\n          >\n            {\n            `${\n              dataBase.DeckNames.map(a=>a.name).includes(inputField)?\n              'name exists':\n              nameTooShortOrLong && inputField.length<4? 'too short':\n              nameTooShortOrLong &&  inputField.length>11? 'too long':\n              ''\n              }`\n            }\n          </div>\n        }\n\n        <select className=\"createNewDeck__select-options\">\n          <option>option 1</option>\n          <option>option 2</option>\n          <option>option 3</option>\n          <option>option 4</option>\n          <option>option 5</option>\n        </select>\n      </Modal.Body>\n\n      <div className=\"justify-between cancelOkContainer\">\n        {[\"Cancel\", \"Ok\"].map((el) => (\n          <button\n            className=\"okCancelButtonColor okCancelButton\"\n            key={el}\n            ref={el==='Ok'? Ok:Cancel}\n            onClick={() => {\n              el === \"Cancel\"\n                ? (() => {\n                  close();\n                  setInputField(\"\");\n\n                  if (dataBase.DeckNames.length === 0) {\n                  \n                    setArrowDown(true);\n                    setDecksAreVisible(false);\n\n                  }\n                })()\n                : addNewDeckName();\n            }}\n          >\n            {el}\n          </button>\n        ))}\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../Context\";\n\nfunction Hamburger({ editButtonClicked, show, setShow }) {\n\n  const { showProgressDiagram, setShowProgressDiagram } = useContext(Context);\n\n  function triggerDiagramAndState() {\n    setShow(!show);\n    setShowProgressDiagram(!showProgressDiagram);\n  }\n\n  return (\n    <div\n      className='menu align-center flex-column p-3'\n      style={{ cursor: !editButtonClicked ? \"default\" : \"pointer\" }} //cursor is default when edit input field is activated\n    >\n      <div style={{ fontSize: \"18px\" }}>Menu</div>\n      <div\n        className='\n        hamburger__menu-icon-container\n         align-center flex-column'\n        onClick={() => (!editButtonClicked ? null : triggerDiagramAndState())}\n      >\n        <div\n          className={\"menuIcon \" + (show ? \"transPlus\" : \" \")}\n          style={{ top: show ? \"8px\" : \"0px\" }}\n        ></div>\n\n        {!show && <div className={\"menuIcon\"} style={{ top: \"8px\" }}></div>}\n\n        <div\n          className={\"menuIcon \" + (show ? \"transMinus\" : \" \")}\n          style={{ top: show ? \"8px\" : \"16px\" }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Hamburger;\n","import React,{useContext} from 'react';\nimport { Nav } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport {Context} from '../../Context'\n\n function Icon({ src, alt, href, style = null,history }) {\n  const {setShowProgressDiagram} = useContext(Context)\n\n  return (\n    <div\n      style={{ ...style, display: 'flex' }}\n      className='iconContainer'\n      onClick={()=>{\n            setShowProgressDiagram(false)\n            history.push('/'+href)\n            }} \n    \n      >\n\n      <img \n          src={src} \n          alt={alt} \n          style={{ width: '20px' }} \n          className='nonDraggableIcon'                                              \n\n      />\n      \n      <Nav.Link \n          \n      > \n          {href} \n      </Nav.Link>\n\n    </div>\n  )\n}\n\nexport default withRouter(Icon)\n","export default __webpack_public_path__ + \"static/media/settings.2c95938e.svg\";","export default __webpack_public_path__ + \"static/media/stats.672ec2f9.svg\";","export default __webpack_public_path__ + \"static/media/logout.d30bb98c.svg\";","import React, { useState, useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Hamburger from \"./Hamburger\";\nimport \"../../styles.css\";\nimport { Context } from \"../../Context\";\n\nimport Icon from \"./Icon\";\nimport settingsIcon from \"../../icons/settings.svg\";\nimport statsIcon from \"../../icons/stats.svg\";\nimport logoutIcon from \"../../icons/logout.svg\";\n\n\nexport default function MenuContainer({\n  editButtonClicked, //set to false when editButton is not clicked gets activated when editButton is clicked\n}) {\n  const [show, setShow] = useState(false); //opens the Menu when set to true\n  const { dataBase, styles } = useContext(Context);\n  const handleClose = () => setShow(false); // closes the Menu when handleclos is triggered\n\n  return (\n    <div\n      className='mx-auto menuContainer'\n      style={{\n        backgroundColor:\n          dataBase &&\n          styles.backgroundColor[dataBase.userPreferences.backgroundColor],\n      }}\n    >\n      <Hamburger\n        editButtonClicked={editButtonClicked}\n        show={show}\n        setShow={setShow}\n      />\n\n      {show && editButtonClicked ? (\n        <>\n          <Modal\n            show={show}\n            onHide={handleClose}\n            contentClassName={\"modNew\"}\n            dialogClassName='align-items-start  pl-3'\n            centered\n          >\n            <Modal.Body className='p-0 menuContainer__modalbody'>\n              <div\n                className='menuStyling nonDraggableIcon'\n                onClick={() => {\n                  setShow(false);\n                }}\n              >\n                <Icons\n                  icons={[\n                    {\n                      src: statsIcon,\n                      alt: \"statsIcon\",\n                      href: \"stats\",\n                      style: {\n                        width: \"calc(100% / 3)\",\n                        padding: \"3px\",\n                        paddingLeft: \"15px\",\n                      },\n                    },\n                    {\n                      src: settingsIcon,\n                      alt: \"settingsIcon\",\n                      href: \"settings\",\n                      style: {\n                        width: \"calc(100% / 3)\",\n                        padding: \"3px\",\n                        borderLeft: \"2px solid black\",\n                        borderRight: \"2px solid black\",\n                        paddingLeft: \"15px\",\n                      },\n                    },\n                    {\n                      src: logoutIcon,\n                      alt: \"logoutIcon\",\n                      href: \"logout\",\n                      style: {\n                        width: \"calc(100% / 3)\",\n                        padding: \"3px\",\n                        paddingLeft: \"15px\",\n                      },\n                    },\n                  ]}\n                />\n              </div>\n            </Modal.Body>\n          </Modal>\n        </>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Icons({ icons }) {\n  return icons.map((icon, key) => <Icon key={key} {...icon} />);\n}\n","import React from 'react'\n\nimport '../LittleComponents/styles.css'\nimport MenuContainer from '../Deck/Menu/MenuContainer'\n\n\nexport default function NavBar({editButtonClicked}) {\n  \n  \n  return (\n    <>   \n      <MenuContainer \n        editButtonClicked={editButtonClicked}\n        /> \n    </>\n  )\n}\n\n\n","import React, {useEffect, useRef, useContext} from 'react'\nimport {Chart} from \"chart.js\";\nimport {Context} from '../Context'\n\n\nexport default function ChartComp() {\n\n  const { dataBase} = useContext(Context);\n  let ctx = useRef(null)\n\n var config = {\n  type: 'doughnut',\n  data: {\n    legend:{\n      labels:{\n        generateLabels: function(){\n          return ''\n        }\n      }\n    }\n    ,\n    datasets: [{\n      data: [\n        // 300, 50, 100\n      ],\n      backgroundColor: [\n        //  \"#FF6384\",\n        //  \"#36A2EB\",\n         \"#5aaa95\", \"#FF6384\"\n        // \"#FFCE56\"\n      ],\n      borderColor: [\n        \"#5aaa95\", \"#FF6384\"\n      ],\n      borderWidth: 0,\n      // hoverBackgroundColor: [\n      //   \"#FF6384\",\n \n      // ]\n    }]\n  },\n  options: {\n    elements: {\n    // center:{\n    //       text:null,\n    //   // text: `Daily Goal \\n ${(dataBase.deckCompleted * 100) /\n    //   //   Object.keys(dataBase.DeckNames).length} %`,\n\n    //   // text: `Daily Goal \\n ${(dataBase.deckCompleted * 100) /\n    //   //   Object.keys(dataBase.DeckNames).length} %`,\n\n    //   fontStyle: \"Times\", // Default is Arial\n    //   // sidePadding: 2, // Default is 20 (as a percentage)\n    //   minFontSize: 11, // Default is 20 (in px), set to false and text will not wrap.\n\n    //   // lineHeight: 19,\n    //   // Default is 25 (in px), used for when text wraps\n     \n    // },\n  },\n    tooltips: false, //removes the tooltips from the diagram that are present in the diagram in stats\n    hover: {mode: null}, //when hovered over the diagram sections, nothing flashes or highlights\n  \n \n    \n    cutoutPercentage: 81,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        top: 10\n      },\n      border: 'none'\n    }\n  }\n};\n\n\n\n  useEffect(() => {\n  \n    new Chart(ctx.current, config);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n    config.data.datasets[0].data.push(\n      Object.keys(dataBase.DeckNames).length - dataBase.deckCompleted,\n      dataBase.deckCompleted\n    );\n\n    Chart.pluginService.register({\n      beforeDraw: function(chart) {\n        if (chart.config.options.elements.center) {\n          // Get ctx from string\n          var ctx = chart.chart.ctx;\n\n          // Get options from the center object in options\n          var centerConfig = chart.config.options.elements.center;\n          var fontStyle = centerConfig.fontStyle || \"Arial\";\n          var txt = centerConfig.text;\n          var color = centerConfig.color || \"#000\";\n          var maxFontSize = centerConfig.maxFontSize || 75;\n          var sidePadding = centerConfig.sidePadding || 20;\n          var sidePaddingCalculated =\n            (sidePadding / 100) * (chart.innerRadius * 2);\n          // Start with a base font of 30px\n          ctx.font = \"30px \" + fontStyle;\n\n          // Get the width of the string and also the width of the element minus 10 to give it 5px side padding\n          var stringWidth = ctx.measureText(txt).width;\n          var elementWidth = chart.innerRadius * 2 - sidePaddingCalculated;\n\n          // Find out how much the font can grow in width.\n          var widthRatio = elementWidth / stringWidth;\n          var newFontSize = Math.floor(30 * widthRatio);\n          var elementHeight = chart.innerRadius * 2;\n\n          // Pick a new font size so it will not be larger than the height of label.\n          var fontSizeToUse = Math.min(\n            newFontSize,\n            elementHeight,\n            maxFontSize\n          );\n          var minFontSize = centerConfig.minFontSize;\n          var lineHeight = centerConfig.lineHeight || 25;\n          var wrapText = false;\n\n          if (minFontSize === undefined) {\n            minFontSize = 20;\n          }\n\n          if (minFontSize && fontSizeToUse < minFontSize) {\n            fontSizeToUse = minFontSize;\n            wrapText = true;\n          }\n\n          // Set font settings to draw it correctly.\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          var centerX = (chart.chartArea.left + chart.chartArea.right) / 2;\n          var centerY = (chart.chartArea.top + chart.chartArea.bottom) / 2;\n          ctx.font = fontSizeToUse + \"px \" + fontStyle;\n          ctx.fillStyle = color;\n\n          if (!wrapText) {\n            ctx.fillText(txt, centerX, centerY);\n            return;\n          }\n\n          var words = txt.split(\" \");\n          var line = \"\";\n          var lines = [];\n\n          // Break words up into multiple lines if necessary\n          for (var n = 0; n < words.length; n++) {\n            var testLine = line + words[n] + \" \";\n            var metrics = ctx.measureText(testLine);\n            var testWidth = metrics.width;\n            if (testWidth > elementWidth && n > 0) {\n              lines.push(line);\n              line = words[n] + \" \";\n            } else {\n              line = testLine;\n            }\n          }\n\n          // Move the center up depending on line height and number of lines\n          centerY -= (lines.length / 2) * lineHeight;\n\n          for (var j = 0; j < lines.length; j++) {\n            ctx.fillText(lines[j], centerX, centerY);\n            centerY += lineHeight;\n          }\n          //Draw text in center\n          ctx.fillText(line, centerX, centerY);\n        }\n      },\n    });\n\n      if(dataBase.userPreferences.backgroundColor === 'default') {\n      \n       } else if (dataBase.userPreferences.backgroundColor === 'dark') {\n   \n           config.data.datasets[0].backgroundColor = []\n           config.data.datasets[0].backgroundColor.push(\"#5aaaff\")\n           config.data.datasets[0].backgroundColor.push(\"#FF6384\")\n         } else {\n           config.data.datasets[0].backgroundColor = []\n           config.data.datasets[0].backgroundColor.push(\"#86a873\")\n           config.data.datasets[0].backgroundColor.push(\"#FF6384\")\n   \n         }\n\n\n\n\n\n  return (\n    <canvas \n        ref={ctx} \n        className='pieChart'\n        style={{ width: '110px', height: '110px', overflow: 'hidden', borderRadius: '5px' }} \n    >\n\n    </canvas>\n\n  )\n}\n","import React, {useContext} from 'react'\nimport PieDiagramm from \"./PieDiagrammMain\";\nimport { Context } from \"../Context\"; \n\nfunction ShowProgressD() {\n\n   const {\n     dataBase,\n     showProgressDiagram,\n     \n  \n    \n   } = useContext(Context);\n\n\n  return (\n    <>\n         {showProgressDiagram ? (\n            <>\n              <div style={{width:'48px', height:'27px', position: 'absolute', left: '346px',top: '-31px', background: 'rgb(90, 170, 149)'}}\n              >\n                  <div style={{fontWeight:'bold'}}\n                  > \n                      Goal\n                  </div>\n                  <div style={{fontSize:'13px', marginLeft:'5px'}}\n                  >\n                    {\n                      `${parseInt((dataBase.deckCompleted * 100) /\n                         Object.keys(dataBase.DeckNames).length)} %`\n                    }\n                  </div>\n              </div>\n            <div className='pieDiagramContainer'\n            >\n              <PieDiagramm />\n            </div>\n            </>\n          ) \n          : \n          null}\n    </>\n  )\n}\n\nexport default ShowProgressD\n","import React, { useEffect,  useContext,} from \"react\";\nimport { Context } from \"../Context\"; \nimport { Container, Row, Spinner } from \"react-bootstrap\";\nimport Deck from \"../Deck/deck/index\";\nimport CreateNewDeck from \"../Deck/deck/CreateNewDeck\";\nimport NavBar from \"./NavBar\";\nimport ShowProgressD from \"./ShowProgressDiagram\";\n\nexport default function DeckContainer() {\n  const {\n    dataBase, setDataBase, styles, setShowProgressDiagram\n    ,scrollbarVisible\n  ,trigger, setTrigger, changeDeckNameOpen, \n  editButtonClicked, \n  decksAreVisible, setDecksAreVisible,\n  spinnerIsVisible, setSpinnerIsVisible,\n   setAddNewDeckWindow,\nsetScrollPosition, arrowDown, setArrowDown,active, setActive, scroller\n  } = useContext(Context);\n\n\n  let colorsArr = [\"#ffcdb2\", \"#ffb4a2\", \"#e5989b\", \"#b5838d\", \"#6d6875\"];\n  \n  \n  function scrollHandler(e) {\n    let position = e.target.scrollTop;\n\n    setScrollPosition(position);\n    setTrigger(Symbol());\n  }\n\n  function handleActive(i) {\n    setActive(i);\n    let newDataBase = { ...dataBase };\n    newDataBase.active = i;\n    setDataBase(newDataBase);\n  }\n\n  useEffect(() => {\n    \n    setTimeout(() => {\n      setSpinnerIsVisible(false);\n    }, 2000);\n  }, []);\n\n  return !spinnerIsVisible && dataBase ? (\n    <>\n      <NavBar editButtonClicked={editButtonClicked} />\n      <Container\n        className=\"align-items-center containerStyling\"\n        style={{\n          backgroundColor:\n            styles.backgroundColor[dataBase.userPreferences.backgroundColor],\n        }}\n      >\n       \n\n        <Row className=\"posRel\">\n          {decksAreVisible ? (\n            <div className=\"firstRowStyling\">\n              <div style={{ position: \"absolute\", left: \"10px\" }}>\n                {dataBase.DeckNames.reduce(\n                  (accum, deck, index) => {\n                    if (active === index) {\n                      accum.arr.push(\n                        <Deck\n                          key={index}\n                          index={index}\n                          deck={deck}\n                          name={deck.name}\n                          transform={`rotate(0deg)`}\n                          zIndex={2}\n                          background={colorsArr[active % colorsArr.length]}\n                          paused={deck.paused}\n                        />\n                      );\n                    } else {\n                      accum.index++;\n\n                      accum.arr.push(\n                        <Deck\n                          key={index}\n                          index={index}\n                          setDeck\n                          paused={deck.paused}\n                          deck={deck}\n                          name={deck.name}\n                          trigger={trigger}\n                          transform={`rotate(${-accum.index * 2}deg)`}\n                          zIndex={0}\n                          bg={colorsArr.map((i, k, ar) => {\n                            if (active === k) {\n                              return ar[ar.length % (k || 1)];\n                            } else {\n                              return i;\n                            }\n                          })}\n                          background={\n                            colorsArr.map((i, k, ar) => {\n                              if (active === k) {\n                                return ar[ar.length % (k || 1)];\n                              } else {\n                                return i;\n                              }\n                            })[index % colorsArr.length]\n                          }\n                        />\n                      );\n                    }\n                    return accum;\n                  },\n                  { index: 0, arr: [] }\n                ).arr.reverse()}\n              </div>\n       \n              {scrollbarVisible ? (\n                //scrollbar gets hidden when there is only one deck\n                <div\n                  ref={scroller}\n                  className=\"scrollerStyling\"\n                  onScroll={(event) => {\n                    if (!changeDeckNameOpen) {\n                      let step = (1000 - 220) / (dataBase.DeckNames.length - 1);\n                      let index = Math.floor(event.target.scrollTop / step);\n                      handleActive(index);\n                      console.log(index + \"actual handle active index\");\n                      scrollHandler(event);\n                    }\n                  }}\n                >\n                  <div\n                    style={{\n                      height: \"1000px\",\n                      position: \"absolute\",\n                      top: \"0px\",\n                      width: \"100%\",\n                    }}\n                  ></div>\n                </div>\n              ) : null}\n            </div>\n          ) : arrowDown ? (\n            <div id=\"arrow\">\n              <div id=\"createYourFirstDeckPrompt\">\n                Start and create your first deck\n              </div>\n              <div style={{ marginTop: \"150px\", position: \"relative\" }}>\n                <div className=\"arrowDown\"></div>\n              </div>\n            </div>\n          ) : null}\n\n          <ShowProgressD/>\n\n         \n        </Row>\n\n        <Row className='justify-content-center'>\n          <button\n            className='createDeckButtonStyling'\n            style={{ cursor: !editButtonClicked ? \"default\" : \"pointer\" }}\n            onClick={() => {\n              if (!editButtonClicked) {\n                //editButtonClicked is set to true by default\n              } else {\n             \n                setAddNewDeckWindow(true); //open the pop up to add a new deck\n                setDecksAreVisible(false); // all the decks in the back are not visible\n                setShowProgressDiagram(false);\n                setArrowDown(false); //create new deck and arrow down not visible\n              }\n            }}\n          >\n            Create Deck\n          </button>\n\n          <div style={{ marginTop: \"40px\" }}>\n            <CreateNewDeck\n            \n              style={{ position: \"absolute\", zIndex: \"40\" }}\n              close={() => {\n                setDecksAreVisible(true);\n                setAddNewDeckWindow(false);\n                setShowProgressDiagram(true);\n              }}\n            />\n          </div>\n        </Row>\n      </Container>\n    </>\n  ) : (\n    // 'database empty'\n    <div\n      className=\"justify-center-align-center\"\n      style={{ height: \"50vh\" }}\n    >\n      <Spinner animation=\"grow\" />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hexagon.7de216f3.svg\";","export default __webpack_public_path__ + \"static/media/hexagonGreen.02e8e263.svg\";","import React, { useState, useContext} from 'react';\nimport { Context } from '../../Context'\nimport hexagonWhite from '../../icons/hexagon.svg'\nimport hexagonGreen from '../../icons/hexagonGreen.svg'\n\n\nexport default function Hexagons({ idx, editHex, setEditHex }) {\n\n  const { dataBase, setDataBase } = useContext(Context)\n  const [showDay, setShowDay] = useState(false)\n\n\n  function setIndex() {\n    let newDataBase = { ...dataBase }\n    newDataBase.userPreferences.days = idx\n    setDataBase(newDataBase)\n    setShowDay(true)\n  }\n\n  return (\n    \n    <div \n      className='justify-center-align-center flex-column  hexagons'\n    >\n\n      {\n        <img\n          style={{ cursor: editHex ? 'default' : 'pointer' }}\n      \n          draggable={false}\n          src={\n              idx <= dataBase.userPreferences.days ? \n              \n              hexagonGreen \n              : \n              hexagonWhite\n          }\n          alt='hexagon'\n          onClick={() => { \n                setEditHex(true) \n                }}\n          onMouseEnter={\n              editHex ? \n\n              () => { } \n              : \n              setIndex\n              }\n          onMouseLeave={\n              editHex ? \n\n              () => { } \n              : \n              () => { setShowDay(false) \n          }}\n\n        />\n      }\n\n      {\n        ((editHex && \n          \n          (showDay || idx === dataBase.userPreferences.days)) || idx === dataBase.userPreferences.days) \n        &&\n            \n        <div style={{\n            transform: 'rotate(-90deg)', width: '54px',\n            fontSize: '14px', paddingLeft: '14px', position: 'absolute', right: '-42px'\n          }}\n        >\n\n            <div className='blackArrow'\n            >\n            </div>\n            \n            <span className='fontBold'\n            >\n                {\n                  idx <= dataBase.userPreferences.days ? \n\n                      `${idx + 1}` \n                        : \n                      `${idx - 1}`\n                }\n            </span> \n            {\n              idx === 0?\n               ' day'\n               : \n               ' days'\n               }\n        </div>\n      }\n    </div>\n  )\n}","import React, { useState} from 'react';\nimport style from './style.module.css'\n\n\n\n\nexport default function RepetitionIntervalFields(\n                                      { data: { name, amount, unit }, \n                                      editIsPossible, index, \n                                      userTimePreferences, setUserTimePreferences,\n                                      saveOrEdit\n                                      }) \n  {\n\n  const [inputNumb, setInputNumb] = useState(amount)\n  const [inputText, setInputText] = useState(name)\n  \n  function handleInputNumbers(e) {\n\n    \n    if(e.target.value.length<3) {\n\n      setInputNumb(e.target.value)\n      let newUserTimePreferences = [ ...userTimePreferences ]\n      newUserTimePreferences[index].amount = e.target.value\n      setUserTimePreferences(newUserTimePreferences)\n    }\n  }\n\n  function checker(e){\n    let {value} = e.target;\n    let newValue = value.replace(/[^0-9]/g,'')\n    if(newValue.length<4){\n      setInputNumb(newValue)\n    }\n  }\n\n\n  function handleInputText(e) {\n\n    setInputText(e.target.value)\n   let newUserTimePreferences = [ ...userTimePreferences ]\n    newUserTimePreferences[index].name = e.target.value\n    setUserTimePreferences(newUserTimePreferences)\n  }\n\n\n  return (\n    \n    <div \n        className='p-2 flex-column justify-center-align-center' \n    >\n      <p \n          className=' border border-dark justify-center' \n          style={{borderRadius: '5px', width: '72px'}}\n      >\n          <div style={{ marginRight: '4px' }}\n          >\n\n              {'<'}\n          </div>\n          <form\n              style={{width:'34px'}}\n          >\n\n              <input \n                   className={style.input}\n                  type='number'\n                  style={{ backgroundColor: saveOrEdit? '#545863':'transparent', outline: 'none', width: '32px', \n                  height: '21px', textAlign: 'center', cursor: saveOrEdit? 'pointer': 'default',\n                  color: saveOrEdit? 'white':'black',\n                  borderRadius:'5px'\n                        }} \n                  disabled={!editIsPossible}\n                  value={inputNumb}\n                  onChange={handleInputNumbers}\n                  onInput={checker}\n            \n              />\n          </form>\n\n            {\n              <div className='fontBold'\n              >\n                \n                {unit}\n              </div>\n            }\n      </p>\n      <form>\n          <input\n            value={inputText}\n            type='text'\n            disabled={!editIsPossible}\n            onChange={handleInputText}\n            className='repetitionIntervalTextFields'\n            maxLength = '8'\n            minLength = '3'\n            style={{\n                    cursor: editIsPossible ? 'pointer' : 'default',\n                    backgroundColor: saveOrEdit? '#545863': 'grey'\n                  }}\n          />\n      </form>\n\n    </div>\n  )\n\n}\n\n","import React, {useContext} from 'react'\nimport '../../styles.css'\nimport { Context } from '../../Context'\n\nexport default function ColorScheme () {\n\n  const { dataBase, setDataBase} = useContext(Context)\n\n\n  function handleColor(e) {\n    let newDataBase = { ...dataBase }\n    newDataBase.userPreferences[e.target.name] = e.target.value\n    setDataBase(newDataBase)\n  }\n\n\n  return (\n   <>\n    <div className='colorscheme'\n    >\n        Colorscheme\n    </div>\n\n      <div \n          className='justify-between-align-center border border-dark colorscheme-container'\n      >\n\n        {\n          ['light', 'dark', 'default'].map(comp =>\n            <>\n              <input \n                style={{ cursor: 'pointer' }}\n                name='backgroundColor'\n                type='radio'\n                // title = `Change background color of main menu to ${comp}.`\n                value={comp}\n                checked ={dataBase.userPreferences?.backgroundColor === comp}  //how to combine checked and handleColor accurately?\n                onChange={handleColor}\n              />\n              <label className='mb-0'>\n                  {comp}\n              </label>\n            </>\n          )\n        }\n      </div>\n      </>\n\n\n\n\n\n\n\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useContext, useEffect} from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Context } from '../../Context'\nimport '../../styles.css'\nimport Hexagons from  './Hexagons'\nimport RepetitionIntervalFields from './RepetitionIntervalFields'\nimport ColorScheme from './ColorScheme'\n\nimport BasicOrangeWindow from '../deck/BasicOrangeWindow'\nimport edit from '../../icons/edit.svg'\nimport save from '../../icons/save.svg'\n\n\n\nfunction Settings({ history }) {\n  const [editIsPossible, setEditIsPossible] = useState(false)\n  const [saveOrEdit, setSaveOrEdit] = useState(false)\n  const [saveOrEditGoal, setSaveOrEditGoal] = useState(false)\n  const [editHex, setEditHex] = useState(true)\n  \n  const { dataBase, setDataBase,setShowProgressDiagram } = useContext(Context)\n  const [userTimePreferences, setUserTimePreferences] = useState({})\n\n  useEffect(() => {\n    setUserTimePreferences(dataBase?.userTimePreferences || {})\n  }, [dataBase?.userTimePreferences])\n\n    useEffect(()=>{\n      setShowProgressDiagram(false)\n    },[])\n\n  function setShow() {\n    history.push('/')\n    setShowProgressDiagram(true)\n  }\n\n\n  function saveTimeNumberChanges() {\n    let newDataBase = { ...dataBase }\n    newDataBase.userTimePreferences = userTimePreferences\n    setDataBase(newDataBase)\n  }\n\n  return (\n\n    dataBase &&\n\n    <BasicOrangeWindow\n      show={true}\n      setShow={setShow}\n      title={\n\n        <div\n          style={{fontWeight: 'bold', fontSize: '22px'}}\n          contentClassName={'pos'}\n        >\n\n          Settings\n       </div>\n      } \n    >\n      <div className='settings__repetion-interval'\n      >\n          Change Repetition Interval\n      </div>\n      <div className='d-flex justify-content-center'\n      >\n          <div \n              className='border border-dark justify-center-align-center settings_repetition-container'\n          >\n              <div \n                  className='flexAroundCenter' \n                  style={{width: '280px'}}\n              >\n                  {\n                    dataBase &&\n                      \n                      dataBase.userTimePreferences.map((col, k) =>\n\n                      <RepetitionIntervalFields\n                          key={k} \n                          index={k} \n                          data={col} \n                          saveOrEdit={saveOrEdit}\n                          editIsPossible={editIsPossible} \n                          userTimePreferences={userTimePreferences} \n                          setUserTimePreferences={setUserTimePreferences} \n                      />\n                      )\n                  }\n                </div>\n              \n          </div>\n          <div \n              className='settings__save-or-edit-container'\n              title='Click and change name buttons and repetition intervals for all decks.'\n          >\n              <img\n                  src={saveOrEdit ? save : edit}\n                  alt={saveOrEdit ? 'save' : 'edit'}\n                  className= 'nonDraggableIcon'\n                  style={{ outline: 'none' }}\n                  onClick={() => {\n                          setEditIsPossible(!editIsPossible)\n                          setSaveOrEdit(!saveOrEdit)\n                          saveTimeNumberChanges()\n                        }}\n              />\n          </div>\n      </div>\n\n      <div \n          className='goalSettingsContainer'\n      >\n          Goal Settings\n      </div>\n\n      <div className='settings__weekly-target'\n      >\n          Current Weekly Target\n      </div>\n\n      <div \n        className='justify-between-align-center border border-dark  settings__container-hexagon'\n      >\n        {\n\n          Array(7).fill('').map((el, idx) =>\n\n            <Hexagons \n                idx={idx} \n                editHex={editHex} \n                setEditHex={setEditHex} \n                saveOrEditGoal={saveOrEditGoal} \n            />\n          )\n        }\n      </div>\n      <div style={{ position: 'absolute', top: '232px', right: '50px', cursor: 'pointer' }}\n      >\n        <img\n          src={editHex ? edit : save}\n          alt={saveOrEditGoal ? 'edit' : 'save'}\n          style={{ outline: 'none' }}\n          className= 'nonDraggableIcon'\n          \n          onClick={() => {\n            setSaveOrEditGoal(!saveOrEditGoal)\n            setEditHex(!editHex)\n          }}\n        />\n      </div>\n      <div className='settings__weekly-target justify-center'\n      >\n\n        Target met: {dataBase.userPreferences.weeksInRow} weeks in a row\n\n      </div>\n     \n\n      <ColorScheme/>\n\n\n    </BasicOrangeWindow>\n  )\n}\n\nexport default withRouter(Settings)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {useEffect, useRef, useContext} from 'react'\nimport Chart from \"chart.js\";\nimport {Context} from '../../Context'\n\nexport default function ChartComp() {\n\n  const { dataBase} = useContext(Context);\n  let ctx = useRef(null)\n\n\n var config = {\n  type: 'doughnut',\n  data: {\n    labels: [\n      // \"Red\",\n\n    ],\n    datasets: [{\n      data: [\n        //  300, 50, 100\n      ],\n      backgroundColor: [\n        //  \"#FF6384\",\n  \n      ],\n      borderColor: [\n        //  'rgba(184, 156, 110, 0.95)',\n   \n      ],\n       borderWidth: 0,\n      hoverBackgroundColor: [\n      //  \"#FF6384\",\n   \n      ]\n    }]\n  },\n  options: {\n    elements: {\n\n    // center:{\n    //  display: true,\n    //   text: null,\n    //   // !dataBase.openedToday ? 'No cards studied today'\n    //   //       //<div style='font-size:12px'>No data</div> \n    //   //       :\n    //   //       `Data from ${todayDate.toLocaleString('de-DE', {\n    //   //         day: 'numeric',\n    //   //         month: 'numeric',\n    //   //         year: 'numeric',\n    //   //       })}`\n            \n    //   color: 'black',\n    //   fontStyle: 'Arial', // Default is Arial\n    //   sidePadding: 2, // Default is 20 (as a percentage)\n    //   minFontSize: 16, // Default is 20 (in px), set to false and text will not wrap.\n    //   lineHeight: 19,\n    \n     \n    // }\n  },\n    legend: {\n      position: 'bottom',\n      labels: {\n        fontColor: 'black'\n      }\n\n    },\n    cutoutPercentage: 81,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        top: 10\n      },\n      border: 'none'\n    }\n  }\n};\n\n\n\n  useEffect(() => {\n\n    new Chart(ctx.current, config);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  let date = new Date().toDateString()\n\n  for (let deck in dataBase.DeckNames) {\n\n    let deckItem = dataBase.DeckNames[deck]\n    if (deckItem.data.find((item) => new Date(item?.openHistory?.[0]).toDateString() === new Date().toDateString())) {\n      // todayCardsStudiedCounter++\n      config.data.labels.push(deckItem.name)\n    }\n    if (deckItem.data.find((item) => new Date(item?.openHistory?.[0]).toDateString())) {\n\n\n    //  cardsStudiedCounter += deckItem.data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString() == date)).length\n\n    //console.log(deckItem.data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString())).length, 'opened cards today')\n\n\n     config.data.labels.push(deckItem.name)\n      \n      //config.data.datasets[0].data.push(10)\n      config.data.datasets[0].data.push(deckItem.data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString() === date)).length)\n      //config.data.datasets[0].backgroundColor.push('yellow')\n       config.data.datasets[0].backgroundColor.push(deckItem.color)\n      config.data.datasets[0].borderColor.push(deckItem.color)\n      config.data.datasets[0].hoverBackgroundColor.push(deckItem.color)\n    }\n  }\n\n \n\n\n  Chart.pluginService.register({\n    beforeDraw: function(chart) {\n      if (chart.config.options.elements.center) {\n        // Get ctx from string\n        var ctx = chart.chart.ctx;\n\n        // Get options from the center object in options\n        var centerConfig = chart.config.options.elements.center;\n        var fontStyle = centerConfig.fontStyle || \"Arial\";\n        var txt = centerConfig.text;\n        var color = centerConfig.color || \"#000\";\n        var maxFontSize = centerConfig.maxFontSize || 75;\n        var sidePadding = centerConfig.sidePadding || 20;\n        var sidePaddingCalculated =\n          (sidePadding / 100) * (chart.innerRadius * 2);\n        // Start with a base font of 30px\n        ctx.font = \"30px \" + fontStyle;\n\n        // Get the width of the string and also the width of the element minus 10 to give it 5px side padding\n        var stringWidth = ctx.measureText(txt).width;\n        var elementWidth = chart.innerRadius * 2 - sidePaddingCalculated;\n\n        // Find out how much the font can grow in width.\n        var widthRatio = elementWidth / stringWidth;\n        var newFontSize = Math.floor(30 * widthRatio);\n        var elementHeight = chart.innerRadius * 2;\n\n        // Pick a new font size so it will not be larger than the height of label.\n        var fontSizeToUse = Math.min(\n          newFontSize,\n          elementHeight,\n          maxFontSize\n        );\n        var minFontSize = centerConfig.minFontSize;\n        var lineHeight = centerConfig.lineHeight || 25;\n        var wrapText = false;\n\n        if (minFontSize === undefined) {\n          minFontSize = 20;\n        }\n\n        if (minFontSize && fontSizeToUse < minFontSize) {\n          fontSizeToUse = minFontSize;\n          wrapText = true;\n        }\n\n        // Set font settings to draw it correctly.\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        var centerX = (chart.chartArea.left + chart.chartArea.right) / 2;\n        var centerY = (chart.chartArea.top + chart.chartArea.bottom) / 2;\n        ctx.font = fontSizeToUse + \"px \" + fontStyle;\n        ctx.fillStyle = color;\n\n        if (!wrapText) {\n          ctx.fillText(txt, centerX, centerY);\n          return;\n        }\n\n        var words = txt.split(\" \");\n        var line = \"\";\n        var lines = [];\n\n        // Break words up into multiple lines if necessary\n        for (let n = 0; n < words.length; n++) {\n          var testLine = line + words[n] + \" \";\n          var metrics = ctx.measureText(testLine);\n          var testWidth = metrics.width;\n          if (testWidth > elementWidth && n > 0) {\n            lines.push(line);\n            line = words[n] + \" \";\n          } else {\n            line = testLine;\n          }\n        }\n\n        // Move the center up depending on line height and number of lines\n        centerY -= (lines.length / 2) * lineHeight;\n\n        for (let n = 0; n < lines.length; n++) {\n          ctx.fillText(lines[n], centerX, centerY);\n          centerY += lineHeight;\n        }\n        //Draw text in center\n        ctx.fillText(line, centerX, centerY);\n      }\n    },\n  });\n\n\n\n  return (\n    <canvas \n        ref={ctx} \n        className='pieChart'\n        style={{ width: '270px', height: '200px', overflow: 'hidden', borderRadius: '5px' }} \n    >\n\n    </canvas>\n\n  )\n}\n\n","import React, { useContext, useEffect, useState } from \"react\";\nimport \"../../styles.css\";\n\nimport { Context } from \"../../Context\";\n\nexport default function TimeAndProgress() {\n  let studyGoal = 80;\n\n  const { dataBase } = useContext(Context);\n  const [currentProgress, setCurrentProgress] = useState(0);\n  const [widthAdjusted, setWidthAdjusted] = useState(0);\n  const [timeObj, setTimeObj] = useState({});\n\n  \n  useEffect(() => {\n    let currentProgress = parseInt(\n      (dataBase.deckCompleted * 100) / \n      Object.keys(dataBase.DeckNames).length \n      || 0);\n    setCurrentProgress(currentProgress);\n\n    let firstVal = [];\n    for (let deckItem of dataBase.DeckNames) {\n      firstVal.push(\n        deckItem.data.filter(\n          (item) =>\n            item.openHistory &&\n            item.openHistory.filter(\n              (item) =>\n                new Date(item).getHours() < 12 && new Date(item).getHours() > 6\n            ).length\n        )\n      );\n      var secVal = deckItem.data.filter(\n        (item) =>\n          item.openHistory &&\n          item.openHistory.filter(\n            (item) =>\n              new Date(item).getHours() < 18 && new Date(item).getHours() > 12\n          ).length\n      );\n      var thirdVal = deckItem.data.filter(\n        (item) =>\n          item.openHistory &&\n          item.openHistory.filter(\n            (item) =>\n              new Date(item).getHours() < 24 && new Date(item).getHours() > 18\n          ).length\n      );\n      var fourthVal = deckItem.data.filter(\n        (item) =>\n          item.openHistory &&\n          item.openHistory.filter((item) => new Date(item).getHours() < 6)\n            .length\n      );\n    }\n\n    setTimeObj({\n      6: firstVal,\n      12: secVal,\n      18: thirdVal,\n      24: fourthVal,\n    });\n\n    let widthAdjusted = Math.round(currentProgress) + 120;\n    setWidthAdjusted(widthAdjusted);\n  }, [dataBase]);\n\n  function renderLines() {\n    let arr = [];\n    let previousWidthVar = 0;\n    for (let i = 6; i <= 24; i += 6) {\n      if (i in timeObj) {\n        let widthVar = ((timeObj[i] || 0) / studyGoal) * 100;\n        previousWidthVar += widthVar;\n\n        if (i === 18) {\n          arr.push(\n            <Row\n              key='1'\n              previousWidthVar={previousWidthVar}\n              widthVar={widthVar}\n              time={<div className='timesStyling'>{\"18 - 24\"}</div>}\n            />\n          );\n        } else if (i === 24) {\n          arr.push(\n            <Row\n              key='2'\n              previousWidthVar={previousWidthVar}\n              widthVar={widthVar}\n              time={<div className='timesStyling'>{\"24 - 06\"}</div>}\n            />\n          );\n        } else if (i <= 12) {\n          if (i < 12) {\n            arr.push(\n              <Row\n                key='3'\n                previousWidthVar={previousWidthVar}\n                widthVar={widthVar}\n                time={\n                  <div className='timeAndProgStyling'>\n                    {\"0\" + i} - {i + 6}\n                  </div>\n                }\n              />\n            );\n          } else {\n            arr.push(\n              <Row\n                key='4'\n                previousWidthVar={previousWidthVar}\n                widthVar={widthVar}\n                time={\n                  <div className='timesStyling'>\n                    {\"12\"} - {\"18\"}\n                  </div>\n                }\n              />\n            );\n          }\n        }\n      }\n    }\n    return arr;\n  }\n\n  return (\n    <div className='diagramHourlyBreakdownContainer justify-around flex-column'>\n      <div className='d-flex'>\n        <div className='timeAndProgress__monthly-goal justify-center-align-center studyGoalStyling'>\n          Monthly Goal\n        </div>\n\n        <div className='progressBar' style={{ marginLeft: \"21px\" }}>\n          <div\n            style={{\n              backgroundColor: \"orange\",\n              color: \"black\",\n              height: \"10px\",\n              width: `${currentProgress}%`,\n            }}\n          ></div>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"2px\",\n            left: `${widthAdjusted}px`,\n            fontSize: \"13px\",\n          }}\n        >\n          {currentProgress.toFixed(0)}%\n        </div>\n      </div>\n\n      {renderLines()}\n    </div>\n  );\n}\n\nfunction Row({ time, previousWidthVar, widthVar }) {\n  return (\n    <div className='d-flex'>\n      <div className='time justify-center'>{time}</div>\n\n      <div className='progressBar'>\n        <div\n          style={{\n            marginLeft: `${previousWidthVar}%`,\n            backgroundColor: \"orange\",\n            width: `${widthVar}%`,\n            height: \"10px\",\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../Context\";\n\nexport default function HourlyBreakdown() {\n  const { dataBase, setDataBase } = useContext(Context);\n\n  function handleMonths(e) {\n    let newDataBase = { ...dataBase };\n    newDataBase.hourlyBreakdown = e.target.value;\n    setDataBase(newDataBase);\n  }\n\n  return (\n    <div className='align-center flex-column'>\n      <div className='hourlyBreakdown__hourly-breakdown'>Hourly Breakdown</div>\n\n      <div className='hourlyBreakdown__month-container justify-evenly'>\n        {['1 month', '3 month', '12 month'].map((comp, index) => (\n          <React.Fragment key={index}>\n            <input\n              className='hourlyBreakdown__input'\n              name='breakdownIntervals'\n              type='radio'\n              // title = `Change background color of main menu to ${comp}.`\n              value={comp}\n              checked={dataBase.hourlyBreakdown === comp} //how to combine checked and handleColor accurately?\n              onChange={handleMonths}\n            />\n\n            <label style={{ margin: '5px' }}>{comp}</label>\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React,  {useState, useEffect, useContext, useRef} from \"react\";\nimport { Context } from \"../../Context\";\n\nfunction RenderDays() {\n\n\n  const [year] = useState(new Date().getFullYear());\n  const [days, setDays] = useState([]);\n  const {dataBase} = useContext(Context);\n  const [showTodaysProg, setShowTodaysProg] = useState(false);\n  const innerStat = useRef(null)\n  const [right,setRight]=useState(0)\n  const [outer,setOuter]=useState(0)\n\n  useEffect(() => {\n    let date = [];\n    let thisYear = new Date(`January 1, ${+year}`);\n\n    while (\n      thisYear.getMonth() !== 0 ||\n      thisYear.getDate() !== 1 ||\n      thisYear.getFullYear() === +year\n    ) {\n      date.push({ day: thisYear.toDateString(), cardsStudied: 0 });\n      thisYear.setDate(thisYear.getDate() + 1);\n    }\n    //setDays(date);\n    let today = new Date('May 26, 2021').toDateString();\n    if (dataBase?.DeckNames) {\n      for (let deck in dataBase.DeckNames) {\n        //console.log(deckItem.data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString())).length, 'opened cards today')\n\n        //cardsStudiedataBase.DeckNames[deck].data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString())).length\n\n        //cardsStudied = dataBase.DeckNames[deck].data.filter((item) => item?.openHistory?.some(item => new Date(item).toDateString() === date)).length\n        let todaysAmount = dataBase.DeckNames[deck].data.filter((item) =>\n          item?.openHistory?.some(\n            (item) => new Date(item).toDateString() === today\n          )\n        ).length;\n        let index = date.findIndex((day) => day.day === today);\n        console.log(index);\n        date[index].cardsStudied += todaysAmount;\n        setDays(date);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [year,dataBase.DeckNames]);\n\n\n\n  return (\n    <div className=\"render-days__year-box-container\"\n     onClick={(e)=>{    \n       let outer = e.currentTarget.getBoundingClientRect()\n   \n        setOuter(outer)\n       }}\n     >\n      {days.map((day, index) => (\n        <div\n          key={index}\n          className={`day ${day.cardsStudied ? 'pointer' : ''}`}\n          style={{ backgroundColor: day.cardsStudied ? 'red' : '' }}\n          onClick={(e) => {\n            let inner= e.target.getBoundingClientRect();\n           \n                if((outer.right - inner.right) < 126){\n                  setRight(outer.right - inner.right - 126)    \n                }\n          \n            if (day.cardsStudied) {\n              setShowTodaysProg(true);\n\n            }\n          }}\n        >\n          {showTodaysProg && day.cardsStudied ? (\n            <div\n              className='render-days__todayStudyInfo'\n              style={{\n                left: right+'px'\n              }}\n              ref={innerStat}\n            >\n              {day.day}\n              <div className='render-days__time'>\n                Time:\n              </div>\n              <div className='render-days__review-container'\n              >\n                \n                Review:`${day.cardsStudied !== 1 ? \"s\" : \"\"}: $\n                {day.cardsStudied} card${day.cardsStudied !== 1 ? \"s\" : \"\"}`\n              </div>\n            </div>\n          ) : null}\n        </div>\n      ))}\n    </div>\n \n  )\n    \n\n}\n\nexport default RenderDays\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n} from \"react\";\nimport { Context } from \"../../Context\";\nimport BasicOrangeWindow from '../deck/BasicOrangeWindow';\nimport ThreeDotsBtn from \"../deck/ThreeDotsBtn\";\nimport { withRouter } from 'react-router-dom';\nimport PieDiagramm from \"./PieDiagramm\";\nimport TimeAndProgress from './TimeAndProgress';\nimport HourlyBreakdown from \"./HourlyBreakdown\";\nimport DeleteCardQuestionBox from \"../deck/DeleteCardQuestionBox\";\nimport RenderDays from './RenderDays'\n\nfunction Stats({ history }) {\n  const { dataBase, setShowProgressDiagram, setDataBase } = useContext(Context);\n  const [showDeleteFrame, setShowDeleteFrame] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [show, setShow] = useState(false);\n \n  \n\n  function setShowFunc() {\n    history.push(\"/\");\n    setShowProgressDiagram(true);\n  }\n\n  useEffect(() => {\n    setShowProgressDiagram(false);\n    // eslint-disable-next-line\n  }, []);\n\n\n\n  return (\n    <div style={{ width: \"70%\", height: \"50%\" }}>\n      <BasicOrangeWindow\n        show={true}\n        setShow={setShowFunc}\n        title={\n          <div className='stats__header'>Stats</div>\n        }\n        menu={\n          <ThreeDotsBtn\n            text={\"stats\"}\n            className=\"resetButtonStyling\"\n            editButtonClicked\n            resetEvent={() => {\n          \n              setShow(!show);\n              setShowDeleteFrame(true);\n\n              //  reset=false\n            }}\n            reset\n          />\n        }\n      >\n        <div>\n          <div className='stats__study-breakdown'>Today's study breakdown</div>\n          <div className='dateDiagramPos'>\n            {!dataBase?.openedToday\n              ? 'No cards studied today'\n              :  `Data from: ${new Date().toLocaleDateString().replace(/\\//g,'.')}`         \n                }\n          </div>\n          <div\n            style={{ marginBottom: \"10px\", border: \"1px solid black\" }}\n            className=\"align-center flex-column\"\n          >\n            {showDeleteFrame && (\n              <DeleteCardQuestionBox\n                resetQuestionText\n                showMessageAgain\n                card=\"card\"\n                checked={checked}\n                setChecked={setChecked}\n                showDeleteWindow={showDeleteFrame}\n                deleteWindow={() => setShowDeleteFrame(false)}\n                trashEvent={() => \n                {\n                  let DeckNames = [...dataBase.DeckNames]\n                  DeckNames.forEach(deckItem=>\n                    deckItem.data.forEach(item=> item.openHistory&&delete item.openHistory)\n               \n                  )\n                  setDataBase({...dataBase,DeckNames})\n                }\n                }\n                onHide={() => {}}\n              />\n            )}\n\n            <PieDiagramm />\n          </div>\n\n          <div className=\"stats__calendar\">Calendar</div>\n\n          <div className=\"justify-center-align-center\">\n            <ButtonLeftAndRight />\n          </div>\n\n          <HourlyBreakdown />\n        </div>\n\n        <div style={{ width: \"200px\" }}></div>\n\n        <TimeAndProgress />\n      </BasicOrangeWindow>\n    </div>\n  );\n}\n\nexport default withRouter(Stats);\n\nfunction ButtonLeftAndRight() {\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  const handleIncrement = () => {\n    setYear(year + 1);\n  };\n\n  const handleDecrement = () => {\n    setYear(year - 1);\n  };\n\n  return (\n    <div className='flex-column'\n    >\n      <div\n        className=\"justify-center-align-center  innerRenderDays\"\n      >\n        {[\"<\", year, \">\"].map((el, index) => (\n          <div\n            style={{\n              width: \"33px\",\n              cursor: el === year ? \"default\" : \"pointer\",\n              margin: el === year ? \"5px\" : \"\",\n              marginTop: el === year? '1px': ''\n            }}\n            className={\n              el !== year\n                ? \"justify-center-align-center  calendarButtons\"\n                : \"justify-center-align-center\"\n            }\n            onClick={\n              el === \"<\" && el !== year ? handleDecrement : handleIncrement\n            }\n            key={index}\n          >\n            {el}\n          </div>\n        ))}\n      </div>\n\n      <RenderDays />\n    </div>\n  );\n}\n","const particlesConfig = \n\n  {\n    particles: {\n      number: {\n        value: 123,\n        density: {\n          enable: true,\n          value_area: 552.4033491425909\n        }\n      },\n      color: {\n        value: \"#dce6f5\"\n      },\n      shape: {\n        type: \"circle\",\n        stroke: {\n          width: 0,\n          color: \"#000000\"\n        },\n        polygon: {\n          nb_sides: 3\n        },\n        image: {\n          src: \"img/github.svg\",\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 0.21646062821684559,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 0.1,\n          opacity_min: 0.1,\n          sync: false\n        }\n      },\n      size: {\n        value: 4.008530152163807,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 292.34779642848423,\n          size_min: 0.1,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: true,\n        distance: 130,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 0.5\n      },\n      move: {\n        enable: true,\n        speed: 0.1,\n        direction: \"none\",\n        random: false,\n        straight: false,\n        out_mode: \"out\",\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 600,\n          rotateY: 1200\n        }\n      }\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: false,\n          mode: \"repulse\"\n        },\n        onclick: {\n          enable: false,\n          mode: \"push\"\n        },\n        resize: true\n      },\n      modes: {\n        grab: {\n          distance: 300,\n          line_linked: {\n            opacity: 1\n          }\n        },\n        bubble: {\n          distance: 100,\n          size: 400,\n          duration: 1,\n          opacity: 0.8445603007933989,\n          speed: 1\n        },\n        repulse: {\n          distance: 10,\n          duration: 0.4\n        },\n        push: {\n          particles_nb: 2\n        },\n        remove: {\n          particles_nb: 1\n        }\n      }\n    },\n    retina_detect: true\n  }\n\n\n  export default particlesConfig\n","import React from 'react'\nimport Particles from 'react-particles-js'\nimport ParticlesConfig from './particle-config'\n\nexport default function ParticleBackground ({children}) {\n  return (\n    <div style={{position:'relative'}}>\n\n        <Particles params = {ParticlesConfig}>\n        </Particles>\n        {children}\n\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/flashcard.59f18bf6.svg\";","export default __webpack_public_path__ + \"static/media/flash.e8170885.svg\";","export default __webpack_public_path__ + \"static/media/users.72177214.svg\";","export default __webpack_public_path__ + \"static/media/keys.4a3ea52d.svg\";","import '../styles.css'\nimport React from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport ParticleBackground from './ParticlesBackground.js'\nimport flashcard from \"../icons/flashcard.svg\";\nimport flash from \"../icons/flash.svg\";\nimport usersSolid from \"../icons/users.svg\";\nimport keysSolid from \"../icons/keys.svg\";\nimport {GoogleLogin} from 'react-google-login';\n\nconst clientId = '120219528416-sosfr3o924155s2girgnofqkrvfa4qsr.apps.googleusercontent.com'\n\n \nclass Login extends React.Component {\n  state = {\n    login: '',\n    password:''\n  }\n  responseFacebook(response) {\n    console.log(response)\n  }\n\n  Login =() =>{\n    \n  }\nonSuccess = (res) => {\n     \n      this.props.setUser(res.profileObj)\n  \n    }\n  onFailure = (res) => {\n    console.log('res:', res)\n  }\n\n \n  render() {\n    return (\n       <ParticleBackground \n       >\n      \n      <div className='loginContainer'\n      >\n\n            <img src = {flashcard} alt = 'flashcard' style={{position: 'relative', left: '-239px', width:'193%', top:'-36px'}}/>\n            <img src = {flash} alt = 'flashcard' className= 'flashcardBackground' style={{ left: '-179px', top:'-46px'}}/>\n            <img src = {flash} alt = 'flashcard' className= 'flashcardBackground' style={{ left: '-177px',top: '-56px'}}/>\n            <img src = {flash} alt = 'flashcard' className= 'flashcardBackground' style={{ left: '-179px', top:'-67px'}}/>\n          \n            <div className='login__login-password-container align-center flex-column'\n            >\n\n            <div className='d-flex'>\n                  <img \n                          src={usersSolid} \n                          alt='click to enter user name' \n                          className='login__img-login-password'\n                         \n                  /> \n                  <input \n                  value={this.state.login} \n                  onChange={e=>this.setState({login:e.target.value})} \n                  className='login__input-username'\n                  />\n            </div>\n            <div className='d-flex'\n            style={{marginTop:'29px'}}>\n                  <img \n                      src={keysSolid} \n                      alt='click to enter password' \n                      className='login__img-login-password'\n                      /> \n                  <form>\n\n                  <input \n                  value={this.state.password} \n                  onChange={e=>this.setState({password:e.target.value})}\n                  type='password' \n                  className='login__input-password'\n                  />\n\n                  </form>\n\n            </div>\n\n        </div>\n\n        <div className='login__facebook-container'\n        >\n          <FacebookLogin\n            appId=\"699586404315736\"\n            cssClass='login__btn-facebook'\n        //   autoLoad={true}\n            fields=\"name,email,picture\"\n            callback={this.props.setUser}\n          />\n        </div>\n\n        <div className='login__google-container justify-center'\n        >\n          <GoogleLogin\n            clientId={clientId}\n            buttonText='Login'\n            className='login__btn-google'\n            onSuccess={this.onSuccess}\n            onFailure={this.onFailure}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn = {true}\n          />\n        </div>\n\n      </div>\n      </ParticleBackground>\n    )\n  }\n}\n \nexport default Login;","import React,{useState} from 'react'\nimport { BrowserRouter as Router, Switch, Route,Redirect } from 'react-router-dom'\nimport LandingPage from './LandingPage/LandingPage.js'\nimport Settings from './Deck/Settings/Settings'\nimport Stats from './Deck/Stats/Stats'\nimport Login from './Login/Login'\n\n\n\nexport default function App() {\n  const [user, setUser] = useState(null)\n\n \n  return (\n   \n    <div \n     >\n     \n      <Router>\n\n        {user?<LandingPage /> : <Redirect to='./login'/>}\n\n        <Switch>               \n          <Route path='/stats'>\n            <Stats />\n          </Route>\n\n          <Route path='/settings'>\n\n            <Settings\n\n            />\n          </Route>\n          {!user &&\n          <Route path ='/login' >\n            <Login setUser={setUser}/>\n          </Route>\n          }\n          {/*when user is not set, display login, otherwise hide it*/}\n          <Route path='/' exact>\n          </Route>\n\n          <Route path='/logout'>\n          </Route>\n        </Switch>\n\n      </Router>\n    </div>\n\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ContextProvider from './Context';\n\nReactDOM.render(\n\n  <ContextProvider>\n     \n        <App/>\n    \n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}